{"version":3,"mappings":"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","names":["defaultState","StateManager","__publicField","partialState","prevState","listener","currentState","error","savedTheme","savedTab","savedTeam","fixture","tab","team","theme","loading","player","root","stateManager","subscribeToState","setFixture","setActiveTab","setActiveTeam","setLoading","setError","applyInitialTheme","ROUTES","ROUTE_TITLES","Router","state","hash","route","updateURL","key","title","router","onRouteChange","getAllRoutes","initKeyboardNavigation","routes","event","activeElement","currentRoute","currentIndex","initRouter","getArsenalEmblem","size","getLeedsEmblem","getDefaultEmblem","teamKey","getTeamEmblem","teamId","getTeamColors","getStatsChart","values","_labels","maxValue","centerX","centerY","radius","points","value","index","angle","normalizedValue","x","y","renderOverview","container","matchInfo","createMatchInfo","matchupCard","createMatchupCard","teamDetails","createTeamDetails","card","matchDate","dateStr","timeStr","homeEmblem","awayEmblem","homeCard","createTeamCard","awayCard","label","colors","chip","news","highlight","parseFormation","formation","num","distributePlayersToLines","players","formationNumbers","lines","gk","p","fieldPlayers","totalFieldPlayers","sum","playerIndex","lineSize","line","i","sortPlayersInLine","positionOrder","a","b","orderA","orderB","calculatePositions","positions","totalLines","lineIndex","lineY","_","lineX","analyzeFormation","sortedLines","flatPlayers","getFormationDescription","renderTactics","header","createSectionHeader","comparison","createTacticalComparison","analysis","createTeamAnalysis","scenarios","createMatchScenarios","section","createComparisonTable","charts","createCapabilityCharts","table","homeColors","awayColors","homeChart","createTeamChart","awayChart","stats","labels","chart","homeAnalysis","createTeamAnalysisCard","awayAnalysis","getTacticalStrengths","strength","getKeyPlayerRoles","role","_a","createScenarioList","generateMatchScenarios","scenario","getPlayerRole","getDisplayName","threshold","japanseName","getLastName","japaneseParts","part","fullName","name","parts","getFullName","jp","intl","getInternationalName","getPositionDisplay","getNumberDisplay","SKIN_COLORS","HAIR_COLORS","getAvatarConfig","_b","_c","generateFaceSVG","config","skinColor","hairColor","hairStyle","faceRadius","eyeY","eyeSize","eyeSpacing","generateHairSVG","adjustBrightness","style","color","factor","hex","r","g","adjustedR","adjustedG","adjustedB","toHex","n","generateDeterministicAvatar","playerName","char","skins","hairs","styles","svgToDataUrl","svgString","p1","getPlayerAvatar","PlayerModal","closeButton","intlName","position","number","avatar","apps","goals","assists","cleanSheets","saves","details","skin","hair","detail","type","focusableElements","firstElement","lastElement","playerModal","addPlayerModalTrigger","element","renderPitch","formationData","createFallbackFormation","pitchBox","pitchSVG","createPitchSVG","createPlayerNodes","node","svg","outerRect","centerLine","centerCircle","penaltyTop","penaltyBottom","goalTop","goalBottom","nodes","teamColors","createPlayerNode","teamClass","dot","nameBox","posBox","normalizeBenchPlayers","bench","nameOverrides","avatarGuess","item","normalizeStringPlayer","trimmedName","guessedPosition","guessPosition","guessedAvatar","knownPosition","sortBenchByPosition","guessPlayerStats","baseStats","loadOverrides","nameResponse","avatarResponse","normalizeBench","playersWithStats","renderLineup","selectedTeam","teamSwitcher","createTeamSwitcher","currentTeam","teamHeader","createTeamHeader","pitchContainer","benchSection","createBenchSection","pills","homePill","createTeamPill","awayPill","teamType","isActive","pill","__vitePreload","normalizedBench","emptyMessage","grid","playerCard","createBenchPlayerCard","errorMessage","numBox","renderTimeline","keyPoints","createKeyPointsSummary","timeline","createMatchTimeline","createTimelineStats","pointsList","point","pointCard","createTimelineComponent","events","axis","eventsList","eventItem","createTimelineEvent","icon","createEventIcon","teamColor","getPhaseText","getEventTypeColor","getEventTypeText","symbol","getEventIconStyle","analyzeTimelineStats","statsGrid","createStatsGrid","statCard","phase","initApp","renderHeader","renderTabNavigation","loadFixtureData","renderCurrentRoute","setupEventListeners","logo","themeToggle","createThemeToggle","existingHeader","nav","tabNav","button","updateActiveTab","currentTheme","newTheme","response","main","content","resizeTimeout","startApp"],"ignoreList":[],"sources":["../../src/app/state.ts","../../src/app/router.ts","../../src/ui/emblems.ts","../../src/features/tabs/overview.ts","../../src/features/pitch/formation.ts","../../src/features/tabs/tactics.ts","../../src/features/players/displayName.ts","../../src/ui/avatar.ts","../../src/features/players/modal.ts","../../src/features/pitch/renderPitch.ts","../../src/features/players/bench.ts","../../src/features/tabs/lineup.ts","../../src/features/tabs/timeline.ts","../../src/app/main.ts"],"sourcesContent":["// アプリケーション状態管理\n\nimport type { AppState, Fixture, Player, Route, Theme } from '@/types'\n\n/**\n * アプリケーション状態のデフォルト値\n */\nconst defaultState: AppState = {\n  currentFixture: null,\n  selectedTab: 'overview',\n  selectedTeam: 'home',\n  theme: 'auto',\n  modalPlayer: null,\n  loading: false,\n  error: null,\n}\n\n/**\n * 状態管理クラス\n */\nclass StateManager {\n  private state: AppState = { ...defaultState }\n  private listeners: Set<(state: AppState) => void> = new Set()\n\n  constructor() {\n    this.loadPersistedState()\n  }\n\n  /**\n   * 現在の状態を取得\n   */\n  getState(): Readonly<AppState> {\n    return { ...this.state }\n  }\n\n  /**\n   * 状態を更新\n   */\n  setState(partialState: Partial<AppState>): void {\n    const prevState = { ...this.state }\n    this.state = { ...this.state, ...partialState }\n\n    // 変更があった場合のみリスナーに通知\n    if (this.hasStateChanged(prevState, this.state)) {\n      this.persistState()\n      this.notifyListeners()\n    }\n  }\n\n  /**\n   * 状態変更リスナーを登録\n   */\n  subscribe(listener: (state: AppState) => void): () => void {\n    this.listeners.add(listener)\n\n    // アンサブスクライブ関数を返す\n    return () => {\n      this.listeners.delete(listener)\n    }\n  }\n\n  /**\n   * すべてのリスナーに状態変更を通知\n   */\n  private notifyListeners(): void {\n    const currentState = this.getState()\n    this.listeners.forEach(listener => {\n      try {\n        listener(currentState)\n      } catch (error) {\n        console.error('State listener error:', error)\n      }\n    })\n  }\n\n  /**\n   * 状態が変更されたかチェック\n   */\n  private hasStateChanged(\n    prevState: AppState,\n    currentState: AppState\n  ): boolean {\n    // 簡単な浅い比較（より厳密にはdeep equalが必要）\n    return JSON.stringify(prevState) !== JSON.stringify(currentState)\n  }\n\n  /**\n   * 永続化された状態を読み込み\n   */\n  private loadPersistedState(): void {\n    try {\n      // テーマ設定を読み込み\n      const savedTheme = localStorage.getItem('match-preview-theme') as Theme\n      if (savedTheme && ['light', 'dark', 'auto'].includes(savedTheme)) {\n        this.state.theme = savedTheme\n      }\n\n      // タブ設定を読み込み\n      const savedTab = localStorage.getItem('match-preview-tab') as Route\n      if (\n        savedTab &&\n        ['overview', 'tactics', 'lineup', 'timeline'].includes(savedTab)\n      ) {\n        this.state.selectedTab = savedTab\n      }\n\n      // チーム選択を読み込み\n      const savedTeam = localStorage.getItem('match-preview-team')\n      if (savedTeam && ['home', 'away'].includes(savedTeam)) {\n        this.state.selectedTeam = savedTeam as 'home' | 'away'\n      }\n    } catch (error) {\n      console.warn('Failed to load persisted state:', error)\n    }\n  }\n\n  /**\n   * 状態を永続化\n   */\n  private persistState(): void {\n    try {\n      localStorage.setItem('match-preview-theme', this.state.theme)\n      localStorage.setItem('match-preview-tab', this.state.selectedTab)\n      localStorage.setItem('match-preview-team', this.state.selectedTeam)\n    } catch (error) {\n      console.warn('Failed to persist state:', error)\n    }\n  }\n\n  // 便利メソッド群\n\n  /**\n   * フィクスチャを設定\n   */\n  setFixture(fixture: Fixture): void {\n    this.setState({ currentFixture: fixture, error: null })\n  }\n\n  /**\n   * タブを変更\n   */\n  setTab(tab: Route): void {\n    this.setState({ selectedTab: tab })\n  }\n\n  /**\n   * チームを選択\n   */\n  setTeam(team: 'home' | 'away'): void {\n    this.setState({ selectedTeam: team })\n  }\n\n  /**\n   * テーマを設定\n   */\n  setTheme(theme: Theme): void {\n    this.setState({ theme })\n    this.applyThemeToDOM(theme)\n  }\n\n  /**\n   * ローディング状態を設定\n   */\n  setLoading(loading: boolean): void {\n    this.setState({ loading })\n  }\n\n  /**\n   * エラーを設定\n   */\n  setError(error: string | null): void {\n    this.setState({ error, loading: false })\n  }\n\n  /**\n   * モーダルプレイヤーを設定\n   */\n  setModalPlayer(player: Player | null): void {\n    this.setState({ modalPlayer: player })\n  }\n\n  /**\n   * 状態をリセット\n   */\n  reset(): void {\n    this.state = { ...defaultState }\n    this.persistState()\n    this.notifyListeners()\n  }\n\n  /**\n   * 現在選択中のチームオブジェクトを取得\n   */\n  getCurrentTeam() {\n    const fixture = this.state.currentFixture\n    if (!fixture) {\n      return null\n    }\n\n    return this.state.selectedTeam === 'home' ? fixture.home : fixture.away\n  }\n\n  /**\n   * 対戦相手チームを取得\n   */\n  getOpponentTeam() {\n    const fixture = this.state.currentFixture\n    if (!fixture) {\n      return null\n    }\n\n    return this.state.selectedTeam === 'home' ? fixture.away : fixture.home\n  }\n\n  /**\n   * DOMにテーマを適用\n   */\n  private applyThemeToDOM(theme: Theme): void {\n    const root = document.documentElement\n\n    // 既存のテーマクラスを削除\n    root.removeAttribute('data-theme')\n\n    if (theme === 'light') {\n      root.setAttribute('data-theme', 'light')\n    } else if (theme === 'dark') {\n      root.setAttribute('data-theme', 'dark')\n    }\n    // 'auto' の場合は属性を設定せず、CSS の @media (prefers-color-scheme) に任せる\n  }\n\n  /**\n   * 初期テーマを適用（アプリ起動時）\n   */\n  applyInitialTheme(): void {\n    this.applyThemeToDOM(this.state.theme)\n  }\n}\n\n// シングルトンインスタンス\nexport const stateManager = new StateManager()\n\n// 便利なヘルパー関数\n\n/**\n * 現在の状態を取得\n */\nexport function getAppState(): Readonly<AppState> {\n  return stateManager.getState()\n}\n\n/**\n * 状態変更を購読\n */\nexport function subscribeToState(\n  listener: (state: AppState) => void\n): () => void {\n  return stateManager.subscribe(listener)\n}\n\n/**\n * フィクスチャデータを設定\n */\nexport function setFixture(fixture: Fixture): void {\n  stateManager.setFixture(fixture)\n}\n\n/**\n * タブを変更\n */\nexport function setActiveTab(tab: Route): void {\n  stateManager.setTab(tab)\n}\n\n/**\n * チームを選択\n */\nexport function setActiveTeam(team: 'home' | 'away'): void {\n  stateManager.setTeam(team)\n}\n\n/**\n * テーマを変更\n */\nexport function setTheme(theme: Theme): void {\n  stateManager.setTheme(theme)\n}\n\n/**\n * ローディング状態を制御\n */\nexport function setLoading(loading: boolean): void {\n  stateManager.setLoading(loading)\n}\n\n/**\n * エラー状態を制御\n */\nexport function setError(error: string | null): void {\n  stateManager.setError(error)\n}\n\n/**\n * 現在選択中のチームを取得\n */\nexport function getCurrentTeam() {\n  return stateManager.getCurrentTeam()\n}\n\n/**\n * 対戦相手チームを取得\n */\nexport function getOpponentTeam() {\n  return stateManager.getOpponentTeam()\n}\n\n/**\n * 初期テーマを適用\n */\nexport function applyInitialTheme(): void {\n  stateManager.applyInitialTheme()\n}\n","// ハッシュベースルーティング\n\nimport type { Route } from '@/types'\nimport { setActiveTab, subscribeToState } from './state'\n\n/**\n * ルート定義\n */\nconst ROUTES: Record<string, Route> = {\n  '#overview': 'overview',\n  '#tactics': 'tactics',\n  '#lineup': 'lineup',\n  '#timeline': 'timeline',\n} as const\n\nconst ROUTE_TITLES: Record<Route, string> = {\n  overview: '概要',\n  tactics: '戦術',\n  lineup: '布陣',\n  timeline: 'タイムライン',\n} as const\n\n/**\n * ルーター管理クラス\n */\nclass Router {\n  private currentRoute: Route = 'overview'\n  private listeners: Set<(route: Route) => void> = new Set()\n\n  constructor() {\n    this.init()\n  }\n\n  /**\n   * ルーター初期化\n   */\n  private init(): void {\n    // ハッシュ変更を監視\n    window.addEventListener('hashchange', this.handleHashChange.bind(this))\n\n    // ページ読み込み時の初期ルート処理\n    this.handleHashChange()\n\n    // 状態変更を監視してURLを同期\n    subscribeToState(state => {\n      if (state.selectedTab !== this.currentRoute) {\n        this.updateURL(state.selectedTab as Route)\n      }\n    })\n  }\n\n  /**\n   * ハッシュ変更ハンドラ\n   */\n  private handleHashChange(): void {\n    const hash = window.location.hash || '#overview'\n    const route = ROUTES[hash] as Route | undefined\n\n    if (route && route !== this.currentRoute) {\n      this.navigateTo(route, false) // URL更新はしない（既に変更済み）\n    } else if (!route) {\n      // 無効なハッシュの場合はデフォルトにリダイレクト\n      this.navigateTo('overview', true)\n    }\n  }\n\n  /**\n   * 指定ルートに遷移\n   */\n  navigateTo(route: Route, updateURL: boolean = true): void {\n    this.currentRoute = route\n\n    // 状態を更新\n    setActiveTab(route)\n\n    // URLを更新（必要に応じて）\n    if (updateURL) {\n      this.updateURL(route)\n    }\n\n    // ページタイトルを更新\n    this.updatePageTitle(route)\n\n    // ルート変更をリスナーに通知\n    this.notifyListeners(route)\n  }\n\n  /**\n   * URLハッシュを更新\n   */\n  private updateURL(route: Route): void {\n    const hash =\n      Object.keys(ROUTES).find(key => ROUTES[key] === route) || '#overview'\n\n    if (window.location.hash !== hash) {\n      // pushState を使ってブラウザ履歴に追加\n      window.history.pushState(null, '', hash)\n    }\n  }\n\n  /**\n   * ページタイトルを更新\n   */\n  private updatePageTitle(route: Route): void {\n    const title = ROUTE_TITLES[route] || '試合プレビュー'\n    document.title = `${title} - 試合プレビュー`\n  }\n\n  /**\n   * ルート変更リスナーを登録\n   */\n  subscribe(listener: (route: Route, prevRoute?: Route) => void): () => void {\n    this.listeners.add(listener)\n\n    // アンサブスクライブ関数を返す\n    return () => {\n      this.listeners.delete(listener)\n    }\n  }\n\n  /**\n   * リスナーに通知\n   */\n  private notifyListeners(route: Route): void {\n    this.listeners.forEach(listener => {\n      try {\n        listener(route)\n      } catch (error) {\n        console.error('Router listener error:', error)\n      }\n    })\n  }\n\n  /**\n   * 現在のルートを取得\n   */\n  getCurrentRoute(): Route {\n    return this.currentRoute\n  }\n\n  /**\n   * ルートが有効かチェック\n   */\n  isValidRoute(route: string): route is Route {\n    return ['overview', 'tactics', 'lineup', 'timeline'].includes(route)\n  }\n\n  /**\n   * 戻る/進むナビゲーション\n   */\n  back(): void {\n    window.history.back()\n  }\n\n  forward(): void {\n    window.history.forward()\n  }\n\n  /**\n   * ブラウザの戻る/進むボタン操作を処理\n   */\n  handlePopState(): void {\n    this.handleHashChange()\n  }\n}\n\n// シングルトンインスタンス\nexport const router = new Router()\n\n// 便利関数\n\n/**\n * 指定ルートに遷移\n */\nexport function navigateTo(route: Route): void {\n  router.navigateTo(route)\n}\n\n/**\n * ルート変更を監視\n */\nexport function onRouteChange(\n  listener: (route: Route, prevRoute?: Route) => void\n): () => void {\n  return router.subscribe(listener)\n}\n\n/**\n * 現在のルートを取得\n */\nexport function getCurrentRoute(): Route {\n  return router.getCurrentRoute()\n}\n\n/**\n * ルートのタイトルを取得\n */\nexport function getRouteTitle(route: Route): string {\n  return ROUTE_TITLES[route] || '不明'\n}\n\n/**\n * 全ルートとタイトルの一覧を取得\n */\nexport function getAllRoutes(): {\n  route: Route\n  title: string\n  hash: string\n}[] {\n  return Object.entries(ROUTES).map(([hash, route]) => ({\n    route,\n    title: ROUTE_TITLES[route],\n    hash,\n  }))\n}\n\n/**\n * キーボードナビゲーション（左右矢印キー）\n */\nexport function initKeyboardNavigation(): void {\n  const routes: Route[] = ['overview', 'tactics', 'lineup', 'timeline']\n\n  document.addEventListener('keydown', event => {\n    // モーダルが開いている間はキーボードナビゲーションを無効化\n    if (document.querySelector('.modal-backdrop')) {\n      return\n    }\n\n    // フォーカスがinput/textarea上にある場合は無効化\n    const activeElement = document.activeElement\n    if (\n      activeElement &&\n      (activeElement.tagName === 'INPUT' ||\n        activeElement.tagName === 'TEXTAREA')\n    ) {\n      return\n    }\n\n    const currentRoute = router.getCurrentRoute()\n    const currentIndex = routes.indexOf(currentRoute)\n\n    if (event.key === 'ArrowLeft' && currentIndex > 0) {\n      event.preventDefault()\n      router.navigateTo(routes[currentIndex - 1])\n    } else if (event.key === 'ArrowRight' && currentIndex < routes.length - 1) {\n      event.preventDefault()\n      router.navigateTo(routes[currentIndex + 1])\n    }\n  })\n}\n\n/**\n * ページ読み込み時の初期化\n */\nexport function initRouter(): void {\n  // popstate イベントを監視（ブラウザの戻る/進む）\n  window.addEventListener('popstate', () => {\n    router.handlePopState()\n  })\n\n  // キーボードナビゲーションを初期化\n  initKeyboardNavigation()\n}\n\n/**\n * パンくずリストの生成\n */\nexport function generateBreadcrumb(): { label: string; route?: Route }[] {\n  const currentRoute = router.getCurrentRoute()\n\n  return [\n    { label: 'ホーム' },\n    { label: '試合プレビュー' },\n    { label: ROUTE_TITLES[currentRoute], route: currentRoute },\n  ]\n}\n\n/**\n * ルート間の遷移アニメーション方向を判定\n */\nexport function getTransitionDirection(\n  fromRoute: Route,\n  toRoute: Route\n): 'left' | 'right' | 'none' {\n  const routes: Route[] = ['overview', 'tactics', 'lineup', 'timeline']\n  const fromIndex = routes.indexOf(fromRoute)\n  const toIndex = routes.indexOf(toRoute)\n\n  if (fromIndex === -1 || toIndex === -1) {\n    return 'none'\n  }\n\n  return toIndex > fromIndex ? 'right' : 'left'\n}\n\n/**\n * メタタグの更新（SEO対応）\n */\nexport function updateMetaTags(route: Route): void {\n  const descriptions: Record<Route, string> = {\n    overview: '試合の概要と基本情報',\n    tactics: 'チームの戦術と分析',\n    lineup: 'スターティングイレブンとベンチメンバー',\n    timeline: '試合の流れとキーポイント',\n  }\n\n  // description meta tag\n  let metaDescription = document.querySelector('meta[name=\"description\"]')\n  if (!metaDescription) {\n    metaDescription = document.createElement('meta')\n    metaDescription.setAttribute('name', 'description')\n    document.head.appendChild(metaDescription)\n  }\n  metaDescription.setAttribute('content', descriptions[route])\n\n  // robots meta tag\n  let metaRobots = document.querySelector('meta[name=\"robots\"]')\n  if (!metaRobots) {\n    metaRobots = document.createElement('meta')\n    metaRobots.setAttribute('name', 'robots')\n    document.head.appendChild(metaRobots)\n  }\n  metaRobots.setAttribute('content', 'index, follow')\n}\n","// チームエンブレム簡略SVG\n\n/**\n * Arsenal エンブレム（簡略版）\n */\nexport function getArsenalEmblem(size: number = 40): string {\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n      <!-- 背景（赤） -->\n      <circle cx=\"50\" cy=\"50\" r=\"48\" fill=\"var(--team-ars)\" stroke=\"var(--team-ars-secondary)\" stroke-width=\"2\"/>\n      \n      <!-- 大砲（簡略化） -->\n      <rect x=\"25\" y=\"45\" width=\"50\" height=\"8\" rx=\"4\" fill=\"var(--team-ars-secondary)\"/>\n      <circle cx=\"30\" cy=\"49\" r=\"6\" fill=\"var(--team-ars-secondary)\"/>\n      <circle cx=\"70\" cy=\"49\" r=\"4\" fill=\"var(--team-ars-secondary)\"/>\n      \n      <!-- 装飾線 -->\n      <path d=\"M 20 35 Q 50 25 80 35\" stroke=\"var(--team-ars-secondary)\" stroke-width=\"2\" fill=\"none\"/>\n      <path d=\"M 20 65 Q 50 75 80 65\" stroke=\"var(--team-ars-secondary)\" stroke-width=\"2\" fill=\"none\"/>\n      \n      <!-- 中央のディテール -->\n      <circle cx=\"50\" cy=\"49\" r=\"3\" fill=\"var(--team-ars)\"/>\n      \n      <text x=\"50\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"12\" font-weight=\"bold\" fill=\"var(--team-ars-secondary)\">ARS</text>\n    </svg>\n  `.trim()\n}\n\n/**\n * Leeds United エンブレム（簡略版）\n */\nexport function getLeedsEmblem(size: number = 40): string {\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n      <!-- 背景（白） -->\n      <circle cx=\"50\" cy=\"50\" r=\"48\" fill=\"var(--team-lee)\" stroke=\"var(--team-lee-secondary)\" stroke-width=\"3\"/>\n      \n      <!-- 内側の青いサークル -->\n      <circle cx=\"50\" cy=\"50\" r=\"40\" fill=\"none\" stroke=\"var(--team-lee-secondary)\" stroke-width=\"2\"/>\n      \n      <!-- ローズ（薔薇）のシンボル（簡略化） -->\n      <circle cx=\"50\" cy=\"40\" r=\"8\" fill=\"var(--team-lee-secondary)\"/>\n      <circle cx=\"45\" cy=\"48\" r=\"5\" fill=\"var(--team-lee-secondary)\"/>\n      <circle cx=\"55\" cy=\"48\" r=\"5\" fill=\"var(--team-lee-secondary)\"/>\n      <circle cx=\"50\" cy=\"55\" r=\"6\" fill=\"var(--team-lee-secondary)\"/>\n      \n      <!-- 茎 -->\n      <rect x=\"48\" y=\"55\" width=\"4\" height=\"15\" fill=\"var(--team-lee-secondary)\"/>\n      \n      <!-- 葉 -->\n      <ellipse cx=\"42\" cy=\"62\" rx=\"4\" ry=\"2\" fill=\"var(--team-lee-secondary)\" transform=\"rotate(-30 42 62)\"/>\n      <ellipse cx=\"58\" cy=\"62\" rx=\"4\" ry=\"2\" fill=\"var(--team-lee-secondary)\" transform=\"rotate(30 58 62)\"/>\n      \n      <text x=\"50\" y=\"85\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"12\" font-weight=\"bold\" fill=\"var(--team-lee-secondary)\">LEE</text>\n    </svg>\n  `.trim()\n}\n\n/**\n * 一般的なフットボール エンブレム（デフォルト）\n */\nexport function getDefaultEmblem(\n  size: number = 40,\n  teamKey: string = 'TM'\n): string {\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 100 100\" xmlns=\"http://www.w3.org/2000/svg\">\n      <!-- 背景 -->\n      <circle cx=\"50\" cy=\"50\" r=\"48\" fill=\"var(--color-primary)\" stroke=\"var(--color-bg)\" stroke-width=\"2\"/>\n      \n      <!-- サッカーボール -->\n      <circle cx=\"50\" cy=\"45\" r=\"18\" fill=\"var(--color-bg)\" stroke=\"var(--color-text-main)\" stroke-width=\"2\"/>\n      \n      <!-- ボールのパターン -->\n      <polygon points=\"50,30 58,38 54,48 46,48 42,38\" fill=\"var(--color-text-main)\"/>\n      <polygon points=\"50,60 42,52 46,42 54,42 58,52\" fill=\"var(--color-text-main)\"/>\n      \n      <!-- チーム名 -->\n      <text x=\"50\" y=\"80\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"14\" font-weight=\"bold\" fill=\"var(--color-bg)\">${teamKey}</text>\n    </svg>\n  `.trim()\n}\n\n/**\n * チームIDからエンブレムを取得\n */\nexport function getTeamEmblem(teamId: string, size: number = 40): string {\n  switch (teamId.toLowerCase()) {\n    case 'ars':\n    case 'arsenal':\n      return getArsenalEmblem(size)\n\n    case 'lee':\n    case 'leeds':\n      return getLeedsEmblem(size)\n\n    default:\n      return getDefaultEmblem(size, teamId.toUpperCase().slice(0, 3))\n  }\n}\n\n/**\n * チームカラー情報を取得\n */\nexport function getTeamColors(teamId: string): {\n  primary: string\n  secondary: string\n  cssClass: string\n} {\n  switch (teamId.toLowerCase()) {\n    case 'ars':\n    case 'arsenal':\n      return {\n        primary: 'var(--team-ars)',\n        secondary: 'var(--team-ars-secondary)',\n        cssClass: 'team-ars',\n      }\n\n    case 'lee':\n    case 'leeds':\n      return {\n        primary: 'var(--team-lee)',\n        secondary: 'var(--team-lee-secondary)',\n        cssClass: 'team-lee',\n      }\n\n    default:\n      return {\n        primary: 'var(--color-primary)',\n        secondary: 'var(--color-bg)',\n        cssClass: 'team-default',\n      }\n  }\n}\n\n/**\n * SVGエンブレムをData URLに変換\n */\nexport function emblemToDataUrl(svgString: string): string {\n  const base64 = btoa(\n    encodeURIComponent(svgString).replace(/%([0-9A-F]{2})/g, (_, p1) =>\n      String.fromCharCode(parseInt(p1, 16))\n    )\n  )\n  return `data:image/svg+xml;base64,${base64}`\n}\n\n/**\n * 小さなチームアイコン（ピル用）\n */\nexport function getTeamIcon(teamId: string, size: number = 20): string {\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\">\n      <circle cx=\"10\" cy=\"10\" r=\"9\" fill=\"currentColor\" opacity=\"0.2\"/>\n      <text x=\"10\" y=\"14\" text-anchor=\"middle\" font-family=\"Arial\" font-size=\"8\" font-weight=\"bold\" fill=\"currentColor\">\n        ${teamId.toUpperCase().slice(0, 2)}\n      </text>\n    </svg>\n  `.trim()\n}\n\n/**\n * 勝利予測などの統計表示用チャート\n */\nexport function getStatsChart(\n  values: number[],\n  _labels: string[],\n  size: number = 100\n): string {\n  const maxValue = Math.max(...values)\n  const centerX = size / 2\n  const centerY = size / 2\n  const radius = size * 0.35\n\n  // レーダーチャート風の表示\n  const points = values\n    .map((value, index) => {\n      const angle = (index * 2 * Math.PI) / values.length - Math.PI / 2\n      const normalizedValue = (value / maxValue) * radius\n      const x = centerX + Math.cos(angle) * normalizedValue\n      const y = centerY + Math.sin(angle) * normalizedValue\n      return `${x},${y}`\n    })\n    .join(' ')\n\n  return `\n    <svg width=\"${size}\" height=\"${size}\" viewBox=\"0 0 ${size} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <!-- 背景グリッド -->\n      <circle cx=\"${centerX}\" cy=\"${centerY}\" r=\"${radius * 0.2}\" fill=\"none\" stroke=\"var(--color-border)\" stroke-width=\"1\" opacity=\"0.3\"/>\n      <circle cx=\"${centerX}\" cy=\"${centerY}\" r=\"${radius * 0.5}\" fill=\"none\" stroke=\"var(--color-border)\" stroke-width=\"1\" opacity=\"0.3\"/>\n      <circle cx=\"${centerX}\" cy=\"${centerY}\" r=\"${radius * 0.8}\" fill=\"none\" stroke=\"var(--color-border)\" stroke-width=\"1\" opacity=\"0.3\"/>\n      \n      <!-- データエリア -->\n      <polygon points=\"${points}\" fill=\"var(--color-primary)\" fill-opacity=\"0.3\" stroke=\"var(--color-primary)\" stroke-width=\"2\"/>\n      \n      <!-- データポイント -->\n      ${values\n        .map((value, index) => {\n          const angle = (index * 2 * Math.PI) / values.length - Math.PI / 2\n          const normalizedValue = (value / maxValue) * radius\n          const x = centerX + Math.cos(angle) * normalizedValue\n          const y = centerY + Math.sin(angle) * normalizedValue\n          return `<circle cx=\"${x}\" cy=\"${y}\" r=\"3\" fill=\"var(--color-primary)\"/>`\n        })\n        .join('')}\n    </svg>\n  `.trim()\n}\n\n/**\n * チーム名の表示用ロゴタイプ\n */\nexport function getTeamLogotype(teamName: string, size: number = 100): string {\n  const fontSize = Math.min((size / teamName.length) * 1.5, size / 4)\n\n  return `\n    <svg width=\"${size * 3}\" height=\"${size}\" viewBox=\"0 0 ${size * 3} ${size}\" xmlns=\"http://www.w3.org/2000/svg\">\n      <defs>\n        <linearGradient id=\"textGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n          <stop offset=\"0%\" stop-color=\"var(--color-primary)\"/>\n          <stop offset=\"100%\" stop-color=\"var(--color-secondary)\"/>\n        </linearGradient>\n      </defs>\n      \n      <text \n        x=\"${size * 1.5}\" \n        y=\"${size / 2 + fontSize / 3}\" \n        text-anchor=\"middle\" \n        font-family=\"Arial, sans-serif\" \n        font-size=\"${fontSize}\" \n        font-weight=\"bold\" \n        fill=\"url(#textGradient)\"\n      >\n        ${teamName}\n      </text>\n    </svg>\n  `.trim()\n}\n","// 概要タブ - 試合基本情報とチーム概要\n\nimport type { Fixture } from '@/types'\nimport { getTeamEmblem, getTeamColors } from '@/ui/emblems'\n\n/**\n * 概要セクション描画\n */\nexport async function renderOverview(fixture: Fixture): Promise<HTMLElement> {\n  const container = document.createElement('div')\n  container.className = 'overview-section'\n\n  // 試合基本情報\n  const matchInfo = createMatchInfo(fixture)\n  container.appendChild(matchInfo)\n\n  // チーム対戦カード\n  const matchupCard = createMatchupCard(fixture)\n  container.appendChild(matchupCard)\n\n  // チーム詳細情報\n  const teamDetails = createTeamDetails(fixture)\n  container.appendChild(teamDetails)\n\n  return container\n}\n\n/**\n * 試合基本情報カード\n */\nfunction createMatchInfo(fixture: Fixture): HTMLElement {\n  const card = document.createElement('div')\n  card.className = 'card mb-6'\n\n  // 日時フォーマット\n  const matchDate = new Date(fixture.dateJST)\n  const dateStr = matchDate.toLocaleDateString('ja-JP', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    weekday: 'long',\n  })\n  const timeStr = matchDate.toLocaleTimeString('ja-JP', {\n    hour: '2-digit',\n    minute: '2-digit',\n  })\n\n  card.innerHTML = `\n    <div class=\"card-header\">\n      <h2 class=\"card-title\">試合情報</h2>\n      <div class=\"card-subtitle\">${fixture.league} ${fixture.round}</div>\n    </div>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n      <div class=\"flex flex-col gap-3\">\n        <div class=\"flex items-center gap-3\">\n          <span class=\"text-sm font-semibold text-secondary\">日時:</span>\n          <div>\n            <div class=\"font-medium\">${dateStr}</div>\n            <div class=\"text-sm text-muted\">${timeStr} キックオフ</div>\n          </div>\n        </div>\n        \n        <div class=\"flex items-center gap-3\">\n          <span class=\"text-sm font-semibold text-secondary\">会場:</span>\n          <span class=\"font-medium\">${fixture.venue}</span>\n        </div>\n      </div>\n      \n      ${\n        fixture.weather\n          ? `\n        <div class=\"flex flex-col gap-3\">\n          <div class=\"flex items-center gap-3\">\n            <span class=\"text-sm font-semibold text-secondary\">天候:</span>\n            <div>\n              <div class=\"font-medium\">${fixture.weather.condition || '不明'}</div>\n              ${fixture.weather.temperature ? `<div class=\"text-sm text-muted\">${fixture.weather.temperature}°C</div>` : ''}\n            </div>\n          </div>\n          \n          ${\n            fixture.referee\n              ? `\n            <div class=\"flex items-center gap-3\">\n              <span class=\"text-sm font-semibold text-secondary\">主審:</span>\n              <span class=\"font-medium\">${fixture.referee.main || '未定'}</span>\n            </div>\n          `\n              : ''\n          }\n        </div>\n      `\n          : ''\n      }\n    </div>\n  `\n\n  return card\n}\n\n/**\n * チーム対戦カード\n */\nfunction createMatchupCard(fixture: Fixture): HTMLElement {\n  const card = document.createElement('div')\n  card.className = 'card mb-6'\n\n  const homeEmblem = getTeamEmblem(fixture.home.teamId, 80)\n  const awayEmblem = getTeamEmblem(fixture.away.teamId, 80)\n\n  card.innerHTML = `\n    <div class=\"text-center py-8\">\n      <div class=\"flex items-center justify-center gap-8 mb-6\">\n        <!-- ホームチーム -->\n        <div class=\"flex flex-col items-center flex-1\">\n          <div class=\"mb-4\">${homeEmblem}</div>\n          <h3 class=\"text-xl font-bold mb-2\">${fixture.home.name}</h3>\n          <div class=\"text-sm text-muted\">${fixture.home.key}</div>\n          <div class=\"text-xs text-muted mt-1\">ホーム</div>\n        </div>\n        \n        <!-- VS -->\n        <div class=\"flex flex-col items-center\">\n          <div class=\"text-2xl font-bold text-primary mb-2\">VS</div>\n          <div class=\"text-xs text-muted\">${fixture.league}</div>\n        </div>\n        \n        <!-- アウェイチーム -->\n        <div class=\"flex flex-col items-center flex-1\">\n          <div class=\"mb-4\">${awayEmblem}</div>\n          <h3 class=\"text-xl font-bold mb-2\">${fixture.away.name}</h3>\n          <div class=\"text-sm text-muted\">${fixture.away.key}</div>\n          <div class=\"text-xs text-muted mt-1\">アウェイ</div>\n        </div>\n      </div>\n      \n      <!-- フォーメーション情報 -->\n      <div class=\"flex justify-center gap-8 text-sm\">\n        <div class=\"text-center\">\n          <div class=\"font-semibold text-secondary\">フォーメーション</div>\n          <div class=\"font-mono text-lg\">${fixture.home.formation}</div>\n        </div>\n        <div class=\"text-center\">\n          <div class=\"font-semibold text-secondary\">フォーメーション</div>\n          <div class=\"font-mono text-lg\">${fixture.away.formation}</div>\n        </div>\n      </div>\n    </div>\n  `\n\n  return card\n}\n\n/**\n * チーム詳細情報\n */\nfunction createTeamDetails(fixture: Fixture): HTMLElement {\n  const container = document.createElement('div')\n  container.className = 'grid grid-cols-1 lg:grid-cols-2 gap-6'\n\n  // ホームチーム詳細\n  const homeCard = createTeamCard(fixture.home, 'ホーム')\n  container.appendChild(homeCard)\n\n  // アウェイチーム詳細\n  const awayCard = createTeamCard(fixture.away, 'アウェイ')\n  container.appendChild(awayCard)\n\n  return container\n}\n\n/**\n * 個別チームカード\n */\nfunction createTeamCard(team: any, label: string): HTMLElement {\n  const card = document.createElement('div')\n  card.className = 'card'\n\n  const colors = getTeamColors(team.teamId)\n\n  card.innerHTML = `\n    <div class=\"card-header\">\n      <h3 class=\"card-title flex items-center gap-3\">\n        ${getTeamEmblem(team.teamId, 32)}\n        ${team.name} (${label})\n      </h3>\n      <div class=\"card-subtitle\">フォーメーション: ${team.formation}</div>\n    </div>\n    \n    <!-- チーム評価 -->\n    ${\n      team.eval\n        ? `\n      <div class=\"mb-6\">\n        <h4 class=\"text-sm font-semibold text-secondary mb-3\">チーム評価</h4>\n        <div class=\"grid grid-cols-3 gap-4 mb-4\">\n          ${\n            team.eval.攻撃力\n              ? `\n            <div class=\"text-center\">\n              <div class=\"text-lg font-bold\" style=\"color: ${colors.primary}\">${team.eval.攻撃力}</div>\n              <div class=\"text-xs text-muted\">攻撃力</div>\n            </div>\n          `\n              : ''\n          }\n          ${\n            team.eval.守備力\n              ? `\n            <div class=\"text-center\">\n              <div class=\"text-lg font-bold\" style=\"color: ${colors.primary}\">${team.eval.守備力}</div>\n              <div class=\"text-xs text-muted\">守備力</div>\n            </div>\n          `\n              : ''\n          }\n          ${\n            team.eval.総合力\n              ? `\n            <div class=\"text-center\">\n              <div class=\"text-lg font-bold\" style=\"color: ${colors.primary}\">${team.eval.総合力}</div>\n              <div class=\"text-xs text-muted\">総合力</div>\n            </div>\n          `\n              : ''\n          }\n        </div>\n        ${\n          team.eval.寸評\n            ? `\n          <div class=\"text-sm text-muted italic\">\n            「${team.eval.寸評}」\n          </div>\n        `\n            : ''\n        }\n      </div>\n    `\n        : ''\n    }\n    \n    <!-- キーポイント -->\n    ${\n      team.keychips && team.keychips.length > 0\n        ? `\n      <div class=\"mb-6\">\n        <h4 class=\"text-sm font-semibold text-secondary mb-3\">キーポイント</h4>\n        <div class=\"flex flex-wrap gap-2\">\n          ${team.keychips\n            .map(\n              (chip: string) => `\n            <span class=\"inline-block px-3 py-1 text-xs font-medium bg-secondary text-inverse rounded-full\">\n              ${chip}\n            </span>\n          `\n            )\n            .join('')}\n        </div>\n      </div>\n    `\n        : ''\n    }\n    \n    <!-- 最新ニュース -->\n    ${\n      team.news && team.news.length > 0\n        ? `\n      <div class=\"mb-6\">\n        <h4 class=\"text-sm font-semibold text-secondary mb-3\">最新ニュース</h4>\n        <ul class=\"space-y-2\">\n          ${team.news\n            .map(\n              (news: string) => `\n            <li class=\"flex items-start gap-2 text-sm\">\n              <span class=\"flex-shrink-0 mt-1.5 w-1.5 h-1.5 rounded-full bg-primary\"></span>\n              <span>${news}</span>\n            </li>\n          `\n            )\n            .join('')}\n        </ul>\n      </div>\n    `\n        : ''\n    }\n    \n    <!-- ハイライト -->\n    ${\n      team.highlights && team.highlights.length > 0\n        ? `\n      <div>\n        <h4 class=\"text-sm font-semibold text-secondary mb-3\">注目ポイント</h4>\n        <ul class=\"space-y-2\">\n          ${team.highlights\n            .map(\n              (highlight: string) => `\n            <li class=\"flex items-start gap-2 text-sm\">\n              <span class=\"flex-shrink-0 mt-1.5 w-1.5 h-1.5 rounded-full\" style=\"background-color: ${colors.primary}\"></span>\n              <span>${highlight}</span>\n            </li>\n          `\n            )\n            .join('')}\n        </ul>\n      </div>\n    `\n        : ''\n    }\n  `\n\n  return card\n}\n\n/**\n * 試合予測セクション（将来拡張用）\n */\nexport function createPredictionSection(): HTMLElement {\n  const section = document.createElement('div')\n  section.className = 'card mt-6'\n\n  section.innerHTML = `\n    <div class=\"card-header\">\n      <h3 class=\"card-title\">試合予測</h3>\n      <div class=\"card-subtitle\">データ分析に基づく予測</div>\n    </div>\n    \n    <div class=\"text-center py-8\">\n      <div class=\"text-muted\">\n        予測機能は今後のアップデートで追加予定です\n      </div>\n    </div>\n  `\n\n  return section\n}\n","// フォーメーション解析 - \"4-3-3\" → 行分割/ポジション並び替え/座標計算\n\nimport type { Player, Position, FormationData } from '@/types'\n\n/**\n * フォーメーション文字列を解析して行ごとの選手数を取得\n * 例: \"4-3-3\" → [4, 3, 3]\n */\nexport function parseFormation(formation: string): number[] {\n  return formation\n    .split('-')\n    .map(num => parseInt(num.trim(), 10))\n    .filter(num => !isNaN(num))\n}\n\n/**\n * 選手をフォーメーションに基づいて行分割\n * GKは常に最後尾、フィールドプレーヤーを前から配置\n */\nexport function distributePlayersToLines(\n  players: Player[],\n  formation: string\n): Player[][] {\n  const formationNumbers = parseFormation(formation)\n  const lines: Player[][] = []\n\n  // GK を分離\n  const gk = players.find(p => p.pos === 'GK')\n  const fieldPlayers = players.filter(p => p.pos !== 'GK')\n\n  if (!gk) {\n    throw new Error('GK not found in lineup')\n  }\n\n  // 必要な選手数チェック\n  const totalFieldPlayers = formationNumbers.reduce((sum, num) => sum + num, 0)\n  if (fieldPlayers.length < totalFieldPlayers) {\n    throw new Error(\n      `Not enough field players. Need ${totalFieldPlayers}, got ${fieldPlayers.length}`\n    )\n  }\n\n  // フィールドプレーヤーをフォーメーションに配置\n  let playerIndex = 0\n  for (const lineSize of formationNumbers) {\n    const line: Player[] = []\n    for (let i = 0; i < lineSize; i++) {\n      if (playerIndex < fieldPlayers.length) {\n        line.push(fieldPlayers[playerIndex])\n        playerIndex++\n      }\n    }\n    lines.push(line)\n  }\n\n  // GK を最後尾に追加\n  lines.push([gk])\n\n  return lines\n}\n\n/**\n * 各行の選手をポジションに基づいて並び替え\n */\nexport function sortPlayersInLine(players: Player[]): Player[] {\n  // ポジションの優先順位定義\n  const positionOrder: { [key: string]: number } = {\n    // DF ライン\n    LB: 1,\n    LCB: 2,\n    CB: 3,\n    RCB: 4,\n    RB: 5,\n    LWB: 1,\n    RWB: 5,\n\n    // MF ライン\n    LM: 1,\n    LCM: 2,\n    DM: 3,\n    CM: 4,\n    RCM: 5,\n    RM: 6,\n    AM: 7,\n\n    // FW ライン\n    LW: 1,\n    LF: 2,\n    CF: 3,\n    ST: 4,\n    RF: 5,\n    RW: 6,\n\n    // GK\n    GK: 1,\n  }\n\n  return [...players].sort((a, b) => {\n    const orderA = positionOrder[a.pos || ''] || 999\n    const orderB = positionOrder[b.pos || ''] || 999\n\n    if (orderA === orderB) {\n      // ポジションが同じまたは不明な場合、名前でソート\n      return (a.jp || a.intl).localeCompare(b.jp || b.intl)\n    }\n\n    return orderA - orderB\n  })\n}\n\n/**\n * ピッチ座標を計算（viewBox: 100x140）\n */\nexport function calculatePositions(lines: Player[][]): Position[] {\n  const positions: Position[] = []\n\n  // ピッチ設定（トークンから）\n  const PITCH_WIDTH = 100\n  const PITCH_HEIGHT = 140\n  const SAFE_MARGIN = 4\n  const INNER_WIDTH = PITCH_WIDTH - SAFE_MARGIN * 2\n  const INNER_HEIGHT = PITCH_HEIGHT - SAFE_MARGIN * 2\n\n  const totalLines = lines.length\n\n  lines.forEach((line, lineIndex) => {\n    // Y座標計算（上から下へ）\n    const lineY = SAFE_MARGIN + (INNER_HEIGHT * (lineIndex + 0.5)) / totalLines\n\n    // 各行で選手を横方向に配置\n    line.forEach((_, playerIndex) => {\n      let lineX: number\n\n      if (line.length === 1) {\n        // 1人の場合は中央\n        lineX = PITCH_WIDTH / 2\n      } else {\n        // 複数の場合は均等配置\n        const spacing = INNER_WIDTH / (line.length + 1)\n        lineX = SAFE_MARGIN + spacing * (playerIndex + 1)\n      }\n\n      positions.push({\n        x: lineX,\n        y: lineY,\n      })\n    })\n  })\n\n  return positions\n}\n\n/**\n * フォーメーション全体を解析してデータを返す\n */\nexport function analyzeFormation(\n  players: Player[],\n  formation: string\n): FormationData {\n  // 選手を行に分割\n  const rawLines = distributePlayersToLines(players, formation)\n\n  // 各行をソート\n  const sortedLines = rawLines.map(line => sortPlayersInLine(line))\n\n  // 座標を計算\n  const positions = calculatePositions(sortedLines)\n\n  // フラット化して位置と対応させる\n  const flatPlayers: Player[] = []\n  sortedLines.forEach(line => {\n    flatPlayers.push(...line)\n  })\n\n  return {\n    formation,\n    lines: sortedLines,\n    positions,\n  }\n}\n\n/**\n * 特定の選手の座標を取得\n */\nexport function getPlayerPosition(\n  player: Player,\n  formationData: FormationData\n): Position | null {\n  // フラット化された選手リストから該当選手を検索\n  const flatPlayers: Player[] = []\n  formationData.lines.forEach(line => {\n    flatPlayers.push(...line)\n  })\n\n  const playerIndex = flatPlayers.findIndex(\n    p => p.jp === player.jp && p.intl === player.intl\n  )\n\n  if (playerIndex === -1) {\n    return null\n  }\n\n  return formationData.positions[playerIndex] || null\n}\n\n/**\n * フォーメーションの妥当性をチェック\n */\nexport function validateFormation(\n  players: Player[],\n  formation: string\n): { valid: boolean; error?: string } {\n  try {\n    const formationNumbers = parseFormation(formation)\n\n    if (formationNumbers.length === 0) {\n      return { valid: false, error: 'Invalid formation format' }\n    }\n\n    const totalFieldPlayers = formationNumbers.reduce(\n      (sum, num) => sum + num,\n      0\n    )\n    const gkCount = players.filter(p => p.pos === 'GK').length\n    const fieldPlayerCount = players.filter(p => p.pos !== 'GK').length\n\n    if (gkCount !== 1) {\n      return { valid: false, error: `Need exactly 1 GK, found ${gkCount}` }\n    }\n\n    if (fieldPlayerCount < totalFieldPlayers) {\n      return {\n        valid: false,\n        error: `Need ${totalFieldPlayers} field players, found ${fieldPlayerCount}`,\n      }\n    }\n\n    return { valid: true }\n  } catch (error) {\n    return {\n      valid: false,\n      error: error instanceof Error ? error.message : 'Unknown error',\n    }\n  }\n}\n\n/**\n * よく使われるフォーメーションのプリセット\n */\nexport const COMMON_FORMATIONS: { [key: string]: string } = {\n  '4-4-2': '4-4-2',\n  '4-3-3': '4-3-3',\n  '3-5-2': '3-5-2',\n  '4-5-1': '4-5-1',\n  '4-2-3-1': '4-2-3-1',\n  '3-4-3': '3-4-3',\n  '5-3-2': '5-3-2',\n  '4-1-4-1': '4-1-4-1',\n}\n\n/**\n * フォーメーションの説明を取得\n */\nexport function getFormationDescription(formation: string): string {\n  const descriptions: { [key: string]: string } = {\n    '4-4-2': '伝統的なバランス型。攻守のバランスが良い',\n    '4-3-3': '攻撃的フォーメーション。サイドからの攻撃が特徴',\n    '3-5-2': 'ウィングバック活用型。サイドの上下動が重要',\n    '4-5-1': '守備的フォーメーション。中盤で数的優位を作る',\n    '4-2-3-1': '現代的バランス型。中盤の厚みと攻撃性を両立',\n    '3-4-3': '攻撃重視。ハイプレスとポゼッションが特徴',\n  }\n\n  return descriptions[formation] || 'カスタムフォーメーション'\n}\n","// 戦術タブ - チーム戦術分析と比較\n\nimport type { Fixture } from '@/types'\nimport { getFormationDescription } from '@/features/pitch/formation'\nimport { getTeamColors, getTeamEmblem, getStatsChart } from '@/ui/emblems'\n\n/**\n * 戦術セクション描画\n */\nexport async function renderTactics(fixture: Fixture): Promise<HTMLElement> {\n  const container = document.createElement('div')\n  container.className = 'tactics-section'\n\n  // セクションヘッダー\n  const header = createSectionHeader()\n  container.appendChild(header)\n\n  // 戦術比較\n  const comparison = createTacticalComparison(fixture)\n  container.appendChild(comparison)\n\n  // 個別チーム分析\n  const analysis = createTeamAnalysis(fixture)\n  container.appendChild(analysis)\n\n  // 予想される展開\n  const scenarios = createMatchScenarios(fixture)\n  container.appendChild(scenarios)\n\n  return container\n}\n\n/**\n * セクションヘッダー\n */\nfunction createSectionHeader(): HTMLElement {\n  const header = document.createElement('div')\n  header.className = 'text-center mb-8'\n\n  header.innerHTML = `\n    <h2 class=\"text-2xl font-bold mb-2\">戦術分析</h2>\n    <p class=\"text-muted\">両チームの戦術的特徴と予想される展開</p>\n  `\n\n  return header\n}\n\n/**\n * 戦術比較セクション\n */\nfunction createTacticalComparison(fixture: Fixture): HTMLElement {\n  const section = document.createElement('div')\n  section.className = 'card mb-8'\n\n  section.innerHTML = `\n    <div class=\"card-header\">\n      <h3 class=\"card-title\">戦術比較</h3>\n      <div class=\"card-subtitle\">フォーメーションとスタイルの対比</div>\n    </div>\n  `\n\n  // 比較テーブル\n  const comparison = createComparisonTable(fixture)\n  section.appendChild(comparison)\n\n  // チーム能力レーダーチャート\n  const charts = createCapabilityCharts(fixture)\n  section.appendChild(charts)\n\n  return section\n}\n\n/**\n * 比較テーブル\n */\nfunction createComparisonTable(fixture: Fixture): HTMLElement {\n  const table = document.createElement('div')\n  table.className = 'overflow-x-auto mb-6'\n\n  const homeColors = getTeamColors(fixture.home.teamId)\n  const awayColors = getTeamColors(fixture.away.teamId)\n\n  table.innerHTML = `\n    <table class=\"w-full text-sm\">\n      <thead>\n        <tr class=\"border-b\">\n          <th class=\"text-left py-3 px-4\" style=\"color: ${homeColors.primary}\">\n            ${fixture.home.name}\n          </th>\n          <th class=\"text-center py-3 px-4 text-muted\">項目</th>\n          <th class=\"text-right py-3 px-4\" style=\"color: ${awayColors.primary}\">\n            ${fixture.away.name}\n          </th>\n        </tr>\n      </thead>\n      <tbody class=\"divide-y\">\n        <tr>\n          <td class=\"py-3 px-4 font-mono font-bold\">${fixture.home.formation}</td>\n          <td class=\"py-3 px-4 text-center text-muted\">フォーメーション</td>\n          <td class=\"py-3 px-4 text-right font-mono font-bold\">${fixture.away.formation}</td>\n        </tr>\n        <tr>\n          <td class=\"py-3 px-4\">\n            ${getFormationDescription(fixture.home.formation)}\n          </td>\n          <td class=\"py-3 px-4 text-center text-muted\">戦術的特徴</td>\n          <td class=\"py-3 px-4 text-right\">\n            ${getFormationDescription(fixture.away.formation)}\n          </td>\n        </tr>\n        ${\n          fixture.home.eval && fixture.away.eval\n            ? `\n          <tr>\n            <td class=\"py-3 px-4 font-bold text-lg\">${fixture.home.eval.攻撃力 || '-'}</td>\n            <td class=\"py-3 px-4 text-center text-muted\">攻撃力</td>\n            <td class=\"py-3 px-4 text-right font-bold text-lg\">${fixture.away.eval.攻撃力 || '-'}</td>\n          </tr>\n          <tr>\n            <td class=\"py-3 px-4 font-bold text-lg\">${fixture.home.eval.守備力 || '-'}</td>\n            <td class=\"py-3 px-4 text-center text-muted\">守備力</td>\n            <td class=\"py-3 px-4 text-right font-bold text-lg\">${fixture.away.eval.守備力 || '-'}</td>\n          </tr>\n          <tr>\n            <td class=\"py-3 px-4 font-bold text-lg\">${fixture.home.eval.総合力 || '-'}</td>\n            <td class=\"py-3 px-4 text-center text-muted\">総合力</td>\n            <td class=\"py-3 px-4 text-right font-bold text-lg\">${fixture.away.eval.総合力 || '-'}</td>\n          </tr>\n        `\n            : ''\n        }\n      </tbody>\n    </table>\n  `\n\n  return table\n}\n\n/**\n * 能力チャート\n */\nfunction createCapabilityCharts(fixture: Fixture): HTMLElement {\n  const container = document.createElement('div')\n  container.className = 'grid grid-cols-1 md:grid-cols-2 gap-6'\n\n  // ホームチームチャート\n  if (fixture.home.eval) {\n    const homeChart = createTeamChart(fixture.home)\n    container.appendChild(homeChart)\n  }\n\n  // アウェイチームチャート\n  if (fixture.away.eval) {\n    const awayChart = createTeamChart(fixture.away)\n    container.appendChild(awayChart)\n  }\n\n  return container\n}\n\n/**\n * 個別チームチャート\n */\nfunction createTeamChart(team: any): HTMLElement {\n  const card = document.createElement('div')\n  card.className = 'text-center'\n\n  const colors = getTeamColors(team.teamId)\n\n  // チャート用データ\n  const stats = team.eval\n  const values = [\n    stats.攻撃力 || 5,\n    stats.守備力 || 5,\n    stats.総合力 || 5,\n    7, // 経験値（仮）\n    6, // フィジカル（仮）\n  ]\n  const labels = ['攻撃', '守備', '総合', '経験', 'フィジカル']\n\n  const chart = getStatsChart(values, labels, 120)\n\n  card.innerHTML = `\n    <div class=\"flex items-center justify-center gap-3 mb-4\">\n      ${getTeamEmblem(team.teamId, 32)}\n      <h4 class=\"font-semibold\" style=\"color: ${colors.primary}\">${team.name}</h4>\n    </div>\n    <div class=\"flex justify-center mb-3\">\n      ${chart}\n    </div>\n    <div class=\"text-xs text-muted\">\n      ${labels.join(' • ')}\n    </div>\n  `\n\n  return card\n}\n\n/**\n * 個別チーム分析\n */\nfunction createTeamAnalysis(fixture: Fixture): HTMLElement {\n  const section = document.createElement('div')\n  section.className = 'grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8'\n\n  // ホームチーム分析\n  const homeAnalysis = createTeamAnalysisCard(fixture.home, 'ホーム')\n  section.appendChild(homeAnalysis)\n\n  // アウェイチーム分析\n  const awayAnalysis = createTeamAnalysisCard(fixture.away, 'アウェイ')\n  section.appendChild(awayAnalysis)\n\n  return section\n}\n\n/**\n * 個別チーム分析カード\n */\nfunction createTeamAnalysisCard(team: any, label: string): HTMLElement {\n  const card = document.createElement('div')\n  card.className = 'card'\n\n  const colors = getTeamColors(team.teamId)\n\n  card.innerHTML = `\n    <div class=\"card-header\">\n      <h3 class=\"card-title flex items-center gap-3\">\n        ${getTeamEmblem(team.teamId, 32)}\n        ${team.name} 戦術分析\n      </h3>\n      <div class=\"card-subtitle\">${label} / ${team.formation}</div>\n    </div>\n    \n    <!-- 戦術的強み -->\n    <div class=\"mb-6\">\n      <h4 class=\"text-sm font-semibold text-secondary mb-3\">戦術的強み</h4>\n      <div class=\"space-y-2\">\n        ${getTacticalStrengths(team)\n          .map(\n            strength => `\n          <div class=\"flex items-start gap-2 text-sm\">\n            <span class=\"flex-shrink-0 mt-1.5 w-1.5 h-1.5 rounded-full\" style=\"background-color: ${colors.primary}\"></span>\n            <span>${strength}</span>\n          </div>\n        `\n          )\n          .join('')}\n      </div>\n    </div>\n    \n    <!-- キープレイヤーの役割 -->\n    <div class=\"mb-6\">\n      <h4 class=\"text-sm font-semibold text-secondary mb-3\">キープレイヤー</h4>\n      <div class=\"space-y-3\">\n        ${getKeyPlayerRoles(team)\n          .map(\n            role => `\n          <div class=\"flex items-start gap-3 text-sm\">\n            <div class=\"flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center text-xs font-bold text-white\" style=\"background-color: ${colors.primary}\">\n              ${role.num}\n            </div>\n            <div>\n              <div class=\"font-medium\">${role.name}</div>\n              <div class=\"text-xs text-muted\">${role.role}</div>\n            </div>\n          </div>\n        `\n          )\n          .join('')}\n      </div>\n    </div>\n    \n    <!-- 戦術的課題 -->\n    ${\n      team.eval?.寸評\n        ? `\n      <div>\n        <h4 class=\"text-sm font-semibold text-secondary mb-3\">分析コメント</h4>\n        <p class=\"text-sm text-muted italic\">\n          「${team.eval.寸評}」\n        </p>\n      </div>\n    `\n        : ''\n    }\n  `\n\n  return card\n}\n\n/**\n * 予想される試合展開\n */\nfunction createMatchScenarios(fixture: Fixture): HTMLElement {\n  const section = document.createElement('div')\n  section.className = 'card'\n\n  section.innerHTML = `\n    <div class=\"card-header\">\n      <h3 class=\"card-title\">予想される試合展開</h3>\n      <div class=\"card-subtitle\">戦術的分析に基づく展開予想</div>\n    </div>\n  `\n\n  const scenarios = createScenarioList(fixture)\n  section.appendChild(scenarios)\n\n  return section\n}\n\n/**\n * シナリオリスト\n */\nfunction createScenarioList(fixture: Fixture): HTMLElement {\n  const container = document.createElement('div')\n  container.className = 'space-y-4'\n\n  const scenarios = generateMatchScenarios(fixture)\n\n  scenarios.forEach((scenario, index) => {\n    const card = document.createElement('div')\n    card.className = 'border border-border rounded-lg p-4'\n\n    card.innerHTML = `\n      <div class=\"flex items-start gap-3\">\n        <div class=\"flex-shrink-0 w-8 h-8 rounded-full bg-primary text-white text-sm font-bold flex items-center justify-center\">\n          ${index + 1}\n        </div>\n        <div>\n          <h4 class=\"font-semibold mb-2\">${scenario.title}</h4>\n          <p class=\"text-sm text-muted mb-2\">${scenario.description}</p>\n          <div class=\"text-xs text-secondary\">\n            確率: <span class=\"font-medium\">${scenario.probability}%</span>\n          </div>\n        </div>\n      </div>\n    `\n\n    container.appendChild(card)\n  })\n\n  return container\n}\n\n// ヘルパー関数\n\nfunction getTacticalStrengths(team: any): string[] {\n  const formations: { [key: string]: string[] } = {\n    '4-3-3': [\n      'ウィングの幅を活かした攻撃',\n      '高い位置からのプレッシング',\n      'サイドバックのオーバーラップ',\n    ],\n    '4-2-3-1': ['中盤でのボール保持', 'トップ下の創造性', '守備的な安定感'],\n    '3-5-2': [\n      'ウィングバックの攻撃参加',\n      '中盤での数的優位',\n      '柔軟なフォーメーション変化',\n    ],\n  }\n\n  return (\n    formations[team.formation] || ['チーム独自の戦術', 'バランスの取れたプレー']\n  )\n}\n\nfunction getKeyPlayerRoles(\n  team: any\n): Array<{ num: string; name: string; role: string }> {\n  // 実際の実装では選手データから動的に生成\n  const lineup = team.lineup || []\n\n  return lineup.slice(0, 3).map((player: any) => ({\n    num: player.num || '?',\n    name: player.jp || player.intl,\n    role: getPlayerRole(player),\n  }))\n}\n\nfunction getPlayerRole(player: any): string {\n  const roles: { [key: string]: string } = {\n    GK: 'ラストライン',\n    CB: 'ディフェンスリーダー',\n    LB: '攻撃的サイドバック',\n    RB: '攻撃的サイドバック',\n    DM: 'ゲームメーカー',\n    CM: '中盤の軸',\n    AM: '創造性の源',\n    LW: 'サイドアタッカー',\n    RW: 'サイドアタッカー',\n    ST: 'フィニッシャー',\n  }\n\n  return roles[player.pos] || 'キープレイヤー'\n}\n\nfunction generateMatchScenarios(fixture: Fixture): Array<{\n  title: string\n  description: string\n  probability: number\n}> {\n  return [\n    {\n      title: 'ポゼッション主体の展開',\n      description: `${fixture.home.name}がボールを握り、じっくりと攻撃を組み立てる展開。サイドチェンジを駆使してチャンスを作る。`,\n      probability: 65,\n    },\n    {\n      title: 'カウンター合戦',\n      description: `両チームが激しくプレスをかけ合い、ボールの奪い合いからカウンターを狙う激しい試合展開。`,\n      probability: 45,\n    },\n    {\n      title: '後半の選手交代が鍵',\n      description: `前半は膠着状態が続き、後半の選手交代とフォーメーション変更が勝負の分かれ目となる。`,\n      probability: 70,\n    },\n  ]\n}\n","// 選手名表示ロジック - 姓のみ/短い和名はフル表示\n\nimport type { Player } from '@/types'\n\n/**\n * 選手の表示名を決定する\n * ルール:\n * 1. 日本語名が閾値以下の文字数 → フル表示\n * 2. 日本語名が閾値より長い → 姓のみ表示（最初の単語）\n * 3. 日本語名がない場合 → 英名の姓のみ\n */\nexport function getDisplayName(player: Player, threshold: number = 5): string {\n  const japanseName = (player.jp || '').trim()\n\n  // 日本語名がない場合はフォールバック\n  if (!japanseName) {\n    return getLastName(player.intl || '')\n  }\n\n  // 中点や空白で区切られている場合は、最初の部分を優先\n  const japaneseParts = japanseName\n    .split(/[\\s・]/g)\n    .filter(part => part.length > 0)\n  if (japaneseParts.length > 1) {\n    return japaneseParts[0] // 複数部分がある場合は最初の部分（姓）\n  }\n\n  // 数字が含まれる場合はフル表示（例：プレイヤー1）\n  if (/\\d/.test(japanseName)) {\n    return japanseName\n  }\n\n  // 日本語名が閾値以下なら（短い和名）フル表示\n  if (japanseName.length <= threshold) {\n    return japanseName\n  }\n\n  // 分割されない場合（例：冨安健洋）は、最初の2文字を姓とする\n  // 但し、全体が3文字以下なら1文字目のみ\n  if (japanseName.length <= 3) {\n    return japanseName.substring(0, 1)\n  } else {\n    return japanseName.substring(0, 2)\n  }\n\n  // フォールバック: 英名の姓\n  return getLastName(player.intl || '')\n}\n\n/**\n * 英名から姓を抽出\n */\nexport function getLastName(fullName: string): string {\n  const name = (fullName || '').trim()\n\n  if (!name) {\n    return 'Unknown'\n  }\n\n  const parts = name.split(/\\s+/).filter(part => part.length > 0)\n\n  if (parts.length === 0) {\n    return 'Unknown'\n  }\n\n  if (parts.length === 1) {\n    return parts[0]\n  }\n\n  // 最後の単語を姓とする\n  return parts[parts.length - 1]\n}\n\n/**\n * フル名を取得（モーダルでの表示用）\n */\nexport function getFullName(player: Player): string {\n  const jp = (player.jp || '').trim()\n  const intl = (player.intl || '').trim()\n\n  if (jp) {\n    return jp\n  }\n  if (intl) {\n    return intl\n  }\n  return 'Unknown Player'\n}\n\n/**\n * 英語名を取得\n */\nexport function getInternationalName(player: Player): string {\n  return player.intl || 'Unknown'\n}\n\n/**\n * ポジション表示名を取得\n */\nexport function getPositionDisplay(player: Player): string {\n  return player.pos || 'Unknown'\n}\n\n/**\n * 背番号表示を取得\n */\nexport function getNumberDisplay(player: Player): string {\n  if (player.num === undefined || player.num === null) {\n    return ''\n  }\n\n  return String(player.num)\n}\n\n/**\n * 選手の検索キーワードを生成（検索機能用）\n */\nexport function getSearchKeywords(player: Player): string[] {\n  const keywords: string[] = []\n\n  if (player.jp) {\n    keywords.push(player.jp.toLowerCase())\n    // 日本語名の各部分も追加\n    const parts = player.jp.split(/[\\s・]/g).filter(part => part.length > 0)\n    keywords.push(...parts.map(part => part.toLowerCase()))\n  }\n\n  if (player.intl) {\n    keywords.push(player.intl.toLowerCase())\n    // 英名の各部分も追加\n    const parts = player.intl.split(/\\s+/).filter(part => part.length > 0)\n    keywords.push(...parts.map(part => part.toLowerCase()))\n  }\n\n  if (player.pos) {\n    keywords.push(player.pos.toLowerCase())\n  }\n\n  if (player.num) {\n    keywords.push(String(player.num))\n  }\n\n  return [...new Set(keywords)] // 重複除去\n}\n\n/**\n * 名前の長さをチェック（表示名決定用の補助関数）\n */\nexport function isShortName(name: string, threshold: number = 5): boolean {\n  return name.trim().length <= threshold\n}\n\n/**\n * カタカナ名前かどうかを判定\n */\nexport function isKatakanaName(name: string): boolean {\n  // カタカナ、中点、スペースのみで構成されているかチェック\n  const katakanaRegex = /^[\\u30A0-\\u30FF\\u30FB\\s・]+$/\n  return katakanaRegex.test(name)\n}\n\n/**\n * ひらがな名前かどうかを判定\n */\nexport function isHiraganaName(name: string): boolean {\n  // ひらがな、スペースのみで構成されているかチェック\n  const hiraganaRegex = /^[\\u3040-\\u309F\\s]+$/\n  return hiraganaRegex.test(name)\n}\n\n/**\n * 漢字が含まれているかを判定\n */\nexport function hasKanji(name: string): boolean {\n  // 漢字の範囲をチェック\n  const kanjiRegex = /[\\u4e00-\\u9faf]/\n  return kanjiRegex.test(name)\n}\n","// 似顔絵SVGジェネレーター\n\nimport type { Player } from '@/types'\n\nexport interface AvatarConfig {\n  skin?: 'light' | 'medium' | 'dark' | 'tan'\n  hair?: 'black' | 'brown' | 'blonde' | 'red' | 'gray' | 'bald'\n  style?: 'short' | 'buzz' | 'curly' | 'long' | 'bald'\n  size?: number\n}\n\n/**\n * 肌色の定義\n */\nconst SKIN_COLORS = {\n  light: '#fdbcb4',\n  medium: '#e8ae82',\n  dark: '#d08b5b',\n  tan: '#c68642',\n} as const\n\n/**\n * 髪色の定義\n */\nconst HAIR_COLORS = {\n  black: '#2c1810',\n  brown: '#8b4513',\n  blonde: '#daa520',\n  red: '#a0522d',\n  gray: '#808080',\n  bald: 'none',\n} as const\n\n/**\n * 選手からアバター設定を取得（デフォルト値付き）\n */\nexport function getAvatarConfig(player: Player): AvatarConfig {\n  return {\n    skin: player.avatar?.skin || 'medium',\n    hair: player.avatar?.hair || 'brown',\n    style: player.avatar?.style || 'short',\n    size: 80,\n  }\n}\n\n/**\n * 似顔絵SVGを生成\n */\nexport function generateFaceSVG(config: AvatarConfig): string {\n  const size = config.size || 80\n  const skinColor = SKIN_COLORS[config.skin || 'medium']\n  const hairColor = HAIR_COLORS[config.hair || 'brown']\n  const hairStyle = config.style || 'short'\n\n  const centerX = size / 2\n  const centerY = size / 2\n\n  // 顔の基本サイズ\n  const faceRadius = size * 0.35\n  const eyeY = centerY - size * 0.1\n  const eyeSize = size * 0.06\n  const eyeSpacing = size * 0.12\n\n  return `\n    <svg \n      width=\"${size}\" \n      height=\"${size}\" \n      viewBox=\"0 0 ${size} ${size}\" \n      xmlns=\"http://www.w3.org/2000/svg\"\n      style=\"background: linear-gradient(135deg, #f0f9ff, #e0f2fe)\"\n    >\n      <!-- 顔の輪郭 -->\n      <ellipse \n        cx=\"${centerX}\" \n        cy=\"${centerY}\" \n        rx=\"${faceRadius}\" \n        ry=\"${faceRadius * 1.1}\" \n        fill=\"${skinColor}\" \n        stroke=\"#d4a574\" \n        stroke-width=\"1\"\n      />\n      \n      <!-- 髪 -->\n      ${generateHairSVG(centerX, centerY, size, hairColor, hairStyle)}\n      \n      <!-- 目 -->\n      <ellipse \n        cx=\"${centerX - eyeSpacing}\" \n        cy=\"${eyeY}\" \n        rx=\"${eyeSize}\" \n        ry=\"${eyeSize * 0.7}\" \n        fill=\"white\"\n      />\n      <ellipse \n        cx=\"${centerX + eyeSpacing}\" \n        cy=\"${eyeY}\" \n        rx=\"${eyeSize}\" \n        ry=\"${eyeSize * 0.7}\" \n        fill=\"white\"\n      />\n      \n      <!-- 瞳 -->\n      <circle \n        cx=\"${centerX - eyeSpacing}\" \n        cy=\"${eyeY}\" \n        r=\"${eyeSize * 0.5}\" \n        fill=\"#2563eb\"\n      />\n      <circle \n        cx=\"${centerX + eyeSpacing}\" \n        cy=\"${eyeY}\" \n        r=\"${eyeSize * 0.5}\" \n        fill=\"#2563eb\"\n      />\n      \n      <!-- ハイライト -->\n      <circle \n        cx=\"${centerX - eyeSpacing - eyeSize * 0.2}\" \n        cy=\"${eyeY - eyeSize * 0.2}\" \n        r=\"${eyeSize * 0.2}\" \n        fill=\"white\"\n      />\n      <circle \n        cx=\"${centerX + eyeSpacing - eyeSize * 0.2}\" \n        cy=\"${eyeY - eyeSize * 0.2}\" \n        r=\"${eyeSize * 0.2}\" \n        fill=\"white\"\n      />\n      \n      <!-- 鼻 -->\n      <ellipse \n        cx=\"${centerX}\" \n        cy=\"${centerY + size * 0.05}\" \n        rx=\"${size * 0.02}\" \n        ry=\"${size * 0.04}\" \n        fill=\"${adjustBrightness(skinColor, -0.1)}\"\n      />\n      \n      <!-- 口 -->\n      <path \n        d=\"M ${centerX - size * 0.08} ${centerY + size * 0.15} \n           Q ${centerX} ${centerY + size * 0.18} \n           ${centerX + size * 0.08} ${centerY + size * 0.15}\"\n        stroke=\"#8b4513\" \n        stroke-width=\"2\" \n        fill=\"none\"\n        stroke-linecap=\"round\"\n      />\n      \n      <!-- 眉毛 -->\n      <path \n        d=\"M ${centerX - eyeSpacing - eyeSize} ${eyeY - size * 0.08} \n           L ${centerX - eyeSpacing + eyeSize} ${eyeY - size * 0.06}\"\n        stroke=\"${hairColor === 'none' ? '#8b4513' : hairColor}\" \n        stroke-width=\"3\" \n        stroke-linecap=\"round\"\n      />\n      <path \n        d=\"M ${centerX + eyeSpacing - eyeSize} ${eyeY - size * 0.06} \n           L ${centerX + eyeSpacing + eyeSize} ${eyeY - size * 0.08}\"\n        stroke=\"${hairColor === 'none' ? '#8b4513' : hairColor}\" \n        stroke-width=\"3\" \n        stroke-linecap=\"round\"\n      />\n    </svg>\n  `.trim()\n}\n\n/**\n * 髪型別のSVGを生成\n */\nfunction generateHairSVG(\n  centerX: number,\n  centerY: number,\n  size: number,\n  hairColor: string,\n  style: string\n): string {\n  if (hairColor === 'none' || style === 'bald') {\n    return '' // ハゲの場合は髪なし\n  }\n\n  const faceRadius = size * 0.35\n\n  switch (style) {\n    case 'buzz':\n      return `\n        <ellipse \n          cx=\"${centerX}\" \n          cy=\"${centerY - size * 0.05}\" \n          rx=\"${faceRadius * 0.9}\" \n          ry=\"${faceRadius * 0.8}\" \n          fill=\"${hairColor}\"\n        />\n      `\n\n    case 'curly':\n      return `\n        <ellipse \n          cx=\"${centerX}\" \n          cy=\"${centerY - size * 0.1}\" \n          rx=\"${faceRadius * 1.1}\" \n          ry=\"${faceRadius * 0.9}\" \n          fill=\"${hairColor}\"\n        />\n        <circle cx=\"${centerX - faceRadius * 0.7}\" cy=\"${centerY - size * 0.15}\" r=\"${size * 0.08}\" fill=\"${hairColor}\" />\n        <circle cx=\"${centerX + faceRadius * 0.7}\" cy=\"${centerY - size * 0.15}\" r=\"${size * 0.08}\" fill=\"${hairColor}\" />\n        <circle cx=\"${centerX - faceRadius * 0.4}\" cy=\"${centerY - size * 0.2}\" r=\"${size * 0.06}\" fill=\"${hairColor}\" />\n        <circle cx=\"${centerX + faceRadius * 0.4}\" cy=\"${centerY - size * 0.2}\" r=\"${size * 0.06}\" fill=\"${hairColor}\" />\n      `\n\n    case 'long':\n      return `\n        <ellipse \n          cx=\"${centerX}\" \n          cy=\"${centerY - size * 0.08}\" \n          rx=\"${faceRadius * 1.2}\" \n          ry=\"${faceRadius * 1.1}\" \n          fill=\"${hairColor}\"\n        />\n        <ellipse \n          cx=\"${centerX - faceRadius}\" \n          cy=\"${centerY + size * 0.1}\" \n          rx=\"${size * 0.15}\" \n          ry=\"${size * 0.3}\" \n          fill=\"${hairColor}\"\n        />\n        <ellipse \n          cx=\"${centerX + faceRadius}\" \n          cy=\"${centerY + size * 0.1}\" \n          rx=\"${size * 0.15}\" \n          ry=\"${size * 0.3}\" \n          fill=\"${hairColor}\"\n        />\n      `\n\n    case 'short':\n    default:\n      return `\n        <ellipse \n          cx=\"${centerX}\" \n          cy=\"${centerY - size * 0.08}\" \n          rx=\"${faceRadius}\" \n          ry=\"${faceRadius * 0.85}\" \n          fill=\"${hairColor}\"\n        />\n      `\n  }\n}\n\n/**\n * 色の明度を調整\n */\nfunction adjustBrightness(color: string, factor: number): string {\n  // 16進数カラーコードから RGB に変換\n  const hex = color.replace('#', '')\n  const r = parseInt(hex.substr(0, 2), 16)\n  const g = parseInt(hex.substr(2, 2), 16)\n  const b = parseInt(hex.substr(4, 2), 16)\n\n  // 明度調整\n  const adjustedR = Math.max(0, Math.min(255, r + r * factor))\n  const adjustedG = Math.max(0, Math.min(255, g + g * factor))\n  const adjustedB = Math.max(0, Math.min(255, b + b * factor))\n\n  // 16進数に戻す\n  const toHex = (n: number) => Math.round(n).toString(16).padStart(2, '0')\n  return `#${toHex(adjustedR)}${toHex(adjustedG)}${toHex(adjustedB)}`\n}\n\n/**\n * ランダムなアバター設定を生成\n */\nexport function generateRandomAvatar(): AvatarConfig {\n  const skins: AvatarConfig['skin'][] = ['light', 'medium', 'dark', 'tan']\n  const hairs: AvatarConfig['hair'][] = [\n    'black',\n    'brown',\n    'blonde',\n    'red',\n    'gray',\n  ]\n  const styles: AvatarConfig['style'][] = ['short', 'buzz', 'curly', 'long']\n\n  return {\n    skin: skins[Math.floor(Math.random() * skins.length)],\n    hair: hairs[Math.floor(Math.random() * hairs.length)],\n    style: styles[Math.floor(Math.random() * styles.length)],\n  }\n}\n\n/**\n * 選手名から決定論的にアバターを生成（同じ名前なら同じアバター）\n */\nexport function generateDeterministicAvatar(playerName: string): AvatarConfig {\n  // 名前から簡単なハッシュを生成\n  let hash = 0\n  for (let i = 0; i < playerName.length; i++) {\n    const char = playerName.charCodeAt(i)\n    hash = (hash << 5) - hash + char\n    hash = hash & hash // 32bit integer\n  }\n\n  const skins: AvatarConfig['skin'][] = ['light', 'medium', 'dark', 'tan']\n  const hairs: AvatarConfig['hair'][] = [\n    'black',\n    'brown',\n    'blonde',\n    'red',\n    'gray',\n  ]\n  const styles: AvatarConfig['style'][] = ['short', 'buzz', 'curly', 'long']\n\n  return {\n    skin: skins[Math.abs(hash) % skins.length],\n    hair: hairs[Math.abs(hash >> 8) % hairs.length],\n    style: styles[Math.abs(hash >> 16) % styles.length],\n  }\n}\n\n/**\n * SVG文字列をData URLに変換\n */\nexport function svgToDataUrl(svgString: string): string {\n  const base64 = btoa(\n    encodeURIComponent(svgString).replace(/%([0-9A-F]{2})/g, (_, p1) =>\n      String.fromCharCode(parseInt(p1, 16))\n    )\n  )\n  return `data:image/svg+xml;base64,${base64}`\n}\n\n/**\n * 選手のアバターを取得（実画像優先、なければ生成）\n */\nexport function getPlayerAvatar(player: Player, size: number = 80): string {\n  // 実画像がある場合はそれを使用\n  if (player.photoUrl) {\n    return player.photoUrl\n  }\n\n  // アバター設定から生成\n  const config = { ...getAvatarConfig(player), size }\n  return svgToDataUrl(generateFaceSVG(config))\n}\n","// 選手モーダルの描画とイベント管理\n\nimport type { Player, Modal } from '@/types'\nimport {\n  getFullName,\n  getInternationalName,\n  getPositionDisplay,\n  getNumberDisplay,\n} from './displayName'\nimport { getPlayerAvatar } from '@/ui/avatar'\n\n/**\n * モーダル状態管理\n */\nclass PlayerModal implements Modal {\n  private modalElement: HTMLElement | null = null\n  private backdropElement: HTMLElement | null = null\n  private isModalOpen = false\n  private focusBeforeModal: HTMLElement | null = null\n\n  constructor() {\n    this.handleKeydown = this.handleKeydown.bind(this)\n    this.handleBackdropClick = this.handleBackdropClick.bind(this)\n  }\n\n  /**\n   * モーダルを開く\n   */\n  open(player: Player): void {\n    if (this.isModalOpen) {\n      this.close()\n    }\n\n    // 現在のフォーカス位置を保存\n    this.focusBeforeModal = document.activeElement as HTMLElement\n\n    // モーダル要素を作成\n    this.createModal(player)\n\n    // DOMに追加\n    document.body.appendChild(this.backdropElement!)\n\n    // イベントリスナー追加\n    document.addEventListener('keydown', this.handleKeydown)\n    this.backdropElement!.addEventListener('click', this.handleBackdropClick)\n\n    // スクロール無効化\n    document.body.style.overflow = 'hidden'\n\n    // 状態更新\n    this.isModalOpen = true\n\n    // フォーカスをモーダルに移動\n    setTimeout(() => {\n      const closeButton = this.modalElement!.querySelector(\n        '.modal-close'\n      ) as HTMLElement\n      closeButton?.focus()\n    }, 100)\n  }\n\n  /**\n   * モーダルを閉じる\n   */\n  close(): void {\n    if (!this.isModalOpen) {\n      return\n    }\n\n    // イベントリスナー削除\n    document.removeEventListener('keydown', this.handleKeydown)\n\n    // DOM要素削除\n    if (this.backdropElement) {\n      this.backdropElement.remove()\n    }\n\n    // スクロール復元\n    document.body.style.overflow = ''\n\n    // フォーカス復元\n    if (this.focusBeforeModal) {\n      this.focusBeforeModal.focus()\n    }\n\n    // 状態更新\n    this.isModalOpen = false\n    this.modalElement = null\n    this.backdropElement = null\n    this.focusBeforeModal = null\n  }\n\n  /**\n   * モーダルが開いているかチェック\n   */\n  isOpen(): boolean {\n    return this.isModalOpen\n  }\n\n  /**\n   * モーダル要素を作成\n   */\n  private createModal(player: Player): void {\n    // バックドロップ作成\n    this.backdropElement = document.createElement('div')\n    this.backdropElement.className = 'modal-backdrop'\n    this.backdropElement.setAttribute('role', 'dialog')\n    this.backdropElement.setAttribute('aria-modal', 'true')\n    this.backdropElement.setAttribute('aria-labelledby', 'modal-title')\n\n    // モーダル作成\n    this.modalElement = document.createElement('div')\n    this.modalElement.className = 'modal'\n    this.modalElement.innerHTML = this.generateModalContent(player)\n\n    this.backdropElement.appendChild(this.modalElement)\n\n    // 閉じるボタンのイベント\n    const closeButton = this.modalElement.querySelector('.modal-close')\n    closeButton?.addEventListener('click', () => this.close())\n  }\n\n  /**\n   * モーダルコンテンツHTML生成\n   */\n  private generateModalContent(player: Player): string {\n    const fullName = getFullName(player)\n    const intlName = getInternationalName(player)\n    const position = getPositionDisplay(player)\n    const number = getNumberDisplay(player)\n    const avatar = getPlayerAvatar(player, 80)\n\n    return `\n      <div class=\"modal-header\">\n        <h2 id=\"modal-title\" class=\"modal-title\">${fullName}</h2>\n        <button class=\"modal-close\" aria-label=\"閉じる\">×</button>\n      </div>\n      \n      <div class=\"modal-body\">\n        <!-- プレイヤー情報 -->\n        <div class=\"modal-section\">\n          <div class=\"player-info\">\n            <img src=\"${avatar}\" alt=\"${fullName}のアバター\" class=\"player-avatar\" />\n            <h3 class=\"player-name\">${fullName}</h3>\n            <div class=\"player-details\">\n              <span><strong>英名:</strong> ${intlName}</span>\n              <span><strong>ポジション:</strong> ${position}</span>\n              ${number ? `<span><strong>背番号:</strong> ${number}</span>` : ''}\n            </div>\n          </div>\n        </div>\n\n        <!-- 今季スタッツ -->\n        ${this.generateStatsSection(player)}\n        \n        <!-- 詳細情報 -->\n        ${this.generateDetailsSection(player)}\n      </div>\n    `\n  }\n\n  /**\n   * スタッツセクション生成\n   */\n  private generateStatsSection(player: Player): string {\n    if (!player.stats) {\n      return `\n        <div class=\"modal-section\">\n          <h4>今季スタッツ</h4>\n          <p class=\"text-muted\">データなし</p>\n        </div>\n      `\n    }\n\n    const {\n      apps = 0,\n      goals = 0,\n      assists = 0,\n      cleanSheets,\n      saves,\n    } = player.stats\n\n    // GK用スタッツ\n    if (player.pos === 'GK') {\n      return `\n        <div class=\"modal-section\">\n          <h4>今季スタッツ</h4>\n          <div class=\"stats-grid\">\n            <div class=\"stat-item\">\n              <div class=\"stat-value\">${apps}</div>\n              <div class=\"stat-label\">出場</div>\n            </div>\n            ${\n              cleanSheets !== undefined\n                ? `\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">${cleanSheets}</div>\n                <div class=\"stat-label\">CS</div>\n              </div>\n            `\n                : ''\n            }\n            ${\n              saves !== undefined\n                ? `\n              <div class=\"stat-item\">\n                <div class=\"stat-value\">${saves}</div>\n                <div class=\"stat-label\">セーブ</div>\n              </div>\n            `\n                : ''\n            }\n          </div>\n        </div>\n      `\n    }\n\n    // フィールドプレーヤー用スタッツ\n    return `\n      <div class=\"modal-section\">\n        <h4>今季スタッツ</h4>\n        <div class=\"stats-grid\">\n          <div class=\"stat-item\">\n            <div class=\"stat-value\">${apps}</div>\n            <div class=\"stat-label\">出場</div>\n          </div>\n          <div class=\"stat-item\">\n            <div class=\"stat-value\">${goals}</div>\n            <div class=\"stat-label\">ゴール</div>\n          </div>\n          <div class=\"stat-item\">\n            <div class=\"stat-value\">${assists}</div>\n            <div class=\"stat-label\">アシスト</div>\n          </div>\n        </div>\n      </div>\n    `\n  }\n\n  /**\n   * 詳細情報セクション生成\n   */\n  private generateDetailsSection(player: Player): string {\n    const details: string[] = []\n\n    if (player.avatar) {\n      const { skin, hair, style } = player.avatar\n      details.push(\n        `外見: ${this.translateAvatarFeature('skin', skin)} / ${this.translateAvatarFeature('hair', hair)} / ${this.translateAvatarFeature('style', style)}`\n      )\n    }\n\n    if (player.playerId) {\n      details.push(`ID: ${player.playerId}`)\n    }\n\n    if (details.length === 0) {\n      return ''\n    }\n\n    return `\n      <div class=\"modal-section\">\n        <h4>詳細情報</h4>\n        <ul class=\"list-unstyled\">\n          ${details.map(detail => `<li class=\"text-sm text-muted\">${detail}</li>`).join('')}\n        </ul>\n      </div>\n    `\n  }\n\n  /**\n   * アバター特徴を日本語に翻訳\n   */\n  private translateAvatarFeature(type: string, value?: string): string {\n    if (!value) {\n      return '不明'\n    }\n\n    const translations: { [key: string]: { [key: string]: string } } = {\n      skin: {\n        light: '明るい肌',\n        medium: '普通の肌',\n        dark: '濃い肌',\n        tan: '日焼けした肌',\n      },\n      hair: {\n        black: '黒髪',\n        brown: '茶髪',\n        blonde: '金髪',\n        red: '赤毛',\n        gray: '白髪',\n        bald: 'ハゲ',\n      },\n      style: {\n        short: 'ショート',\n        buzz: '坊主',\n        curly: 'カーリー',\n        long: 'ロング',\n        bald: 'ハゲ',\n      },\n    }\n\n    return translations[type]?.[value] || value\n  }\n\n  /**\n   * キーボードイベントハンドラ\n   */\n  private handleKeydown(event: KeyboardEvent): void {\n    if (event.key === 'Escape') {\n      event.preventDefault()\n      this.close()\n    }\n\n    // Tab トラップ（モーダル内でのフォーカス循環）\n    if (event.key === 'Tab' && this.modalElement) {\n      this.trapFocus(event)\n    }\n  }\n\n  /**\n   * バックドロップクリックハンドラ\n   */\n  private handleBackdropClick(event: MouseEvent): void {\n    if (event.target === this.backdropElement) {\n      this.close()\n    }\n  }\n\n  /**\n   * フォーカストラップ（アクセシビリティ）\n   */\n  private trapFocus(event: KeyboardEvent): void {\n    if (!this.modalElement) {\n      return\n    }\n\n    const focusableElements = this.modalElement.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    ) as NodeListOf<HTMLElement>\n\n    const firstElement = focusableElements[0]\n    const lastElement = focusableElements[focusableElements.length - 1]\n\n    if (event.shiftKey) {\n      // Shift + Tab\n      if (document.activeElement === firstElement) {\n        event.preventDefault()\n        lastElement.focus()\n      }\n    } else {\n      // Tab\n      if (document.activeElement === lastElement) {\n        event.preventDefault()\n        firstElement.focus()\n      }\n    }\n  }\n}\n\n// シングルトンインスタンス\nexport const playerModal = new PlayerModal()\n\n/**\n * 選手要素にモーダル機能を追加\n */\nexport function addPlayerModalTrigger(\n  element: HTMLElement,\n  player: Player\n): void {\n  // クリックイベント\n  element.addEventListener('click', event => {\n    event.preventDefault()\n    event.stopPropagation()\n    playerModal.open(player)\n  })\n\n  // キーボードアクセシビリティ\n  element.setAttribute('role', 'button')\n  element.setAttribute('tabindex', '0')\n  element.setAttribute('aria-label', `${getFullName(player)}の詳細を表示`)\n\n  element.addEventListener('keydown', event => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      playerModal.open(player)\n    }\n  })\n}\n\n/**\n * 複数要素にモーダルトリガーを一括追加\n */\nexport function addModalTriggersToElements(\n  elements: NodeListOf<HTMLElement>,\n  players: Player[]\n): void {\n  elements.forEach((element, index) => {\n    if (players[index]) {\n      addPlayerModalTrigger(element, players[index])\n    }\n  })\n}\n","// ピッチ描画 - viewBox=100×140に同期した描画（SVG+絶対配置）\n\nimport type { Player, Position, FormationData } from '@/types'\nimport { analyzeFormation } from './formation'\nimport { getDisplayName } from '../players/displayName'\nimport { addPlayerModalTrigger } from '../players/modal'\nimport { getTeamColors } from '@/ui/emblems'\n\n/**\n * ピッチ全体を描画\n */\nexport function renderPitch(\n  formation: string,\n  players: Player[],\n  teamId: string = ''\n): HTMLElement {\n  // フォーメーション解析\n  let formationData: FormationData\n\n  try {\n    formationData = analyzeFormation(players, formation)\n  } catch (error) {\n    console.error('Formation analysis failed:', error)\n    // フォールバック: 簡単な配置\n    formationData = createFallbackFormation(players)\n  }\n\n  // ピッチコンテナ作成\n  const container = document.createElement('div')\n  container.className = 'pitch-container'\n\n  // ピッチボックス作成\n  const pitchBox = document.createElement('div')\n  pitchBox.className = 'pitch-box'\n\n  // SVGピッチライン描画\n  const pitchSVG = createPitchSVG()\n  pitchBox.appendChild(pitchSVG)\n\n  // 選手ノード配置\n  const playerNodes = createPlayerNodes(formationData, teamId)\n  playerNodes.forEach(node => pitchBox.appendChild(node))\n\n  container.appendChild(pitchBox)\n\n  return container\n}\n\n/**\n * ピッチのSVGライン描画\n */\nfunction createPitchSVG(): SVGElement {\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n  svg.setAttribute('class', 'pitch-svg')\n  svg.setAttribute('viewBox', '0 0 100 140')\n  svg.setAttribute('preserveAspectRatio', 'xMidYMid meet')\n\n  const g = document.createElementNS('http://www.w3.org/2000/svg', 'g')\n  g.setAttribute('class', 'pitch-lines')\n\n  // ピッチ外枠（安全マージン考慮）\n  const outerRect = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'rect'\n  )\n  outerRect.setAttribute('x', '4')\n  outerRect.setAttribute('y', '4')\n  outerRect.setAttribute('width', '92')\n  outerRect.setAttribute('height', '132')\n  outerRect.setAttribute('fill', 'none')\n  outerRect.setAttribute('stroke', 'currentColor')\n  outerRect.setAttribute('stroke-width', '1')\n  g.appendChild(outerRect)\n\n  // センターライン\n  const centerLine = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'line'\n  )\n  centerLine.setAttribute('x1', '4')\n  centerLine.setAttribute('y1', '70')\n  centerLine.setAttribute('x2', '96')\n  centerLine.setAttribute('y2', '70')\n  centerLine.setAttribute('stroke', 'currentColor')\n  centerLine.setAttribute('stroke-width', '1')\n  g.appendChild(centerLine)\n\n  // センターサークル\n  const centerCircle = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'circle'\n  )\n  centerCircle.setAttribute('cx', '50')\n  centerCircle.setAttribute('cy', '70')\n  centerCircle.setAttribute('r', '10')\n  centerCircle.setAttribute('fill', 'none')\n  centerCircle.setAttribute('stroke', 'currentColor')\n  centerCircle.setAttribute('stroke-width', '1')\n  g.appendChild(centerCircle)\n\n  // ペナルティエリア（上）\n  const penaltyTop = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'rect'\n  )\n  penaltyTop.setAttribute('x', '20')\n  penaltyTop.setAttribute('y', '4')\n  penaltyTop.setAttribute('width', '60')\n  penaltyTop.setAttribute('height', '18')\n  penaltyTop.setAttribute('fill', 'none')\n  penaltyTop.setAttribute('stroke', 'currentColor')\n  penaltyTop.setAttribute('stroke-width', '1')\n  g.appendChild(penaltyTop)\n\n  // ペナルティエリア（下）\n  const penaltyBottom = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'rect'\n  )\n  penaltyBottom.setAttribute('x', '20')\n  penaltyBottom.setAttribute('y', '118')\n  penaltyBottom.setAttribute('width', '60')\n  penaltyBottom.setAttribute('height', '18')\n  penaltyBottom.setAttribute('fill', 'none')\n  penaltyBottom.setAttribute('stroke', 'currentColor')\n  penaltyBottom.setAttribute('stroke-width', '1')\n  g.appendChild(penaltyBottom)\n\n  // ゴールエリア（上）\n  const goalTop = document.createElementNS('http://www.w3.org/2000/svg', 'rect')\n  goalTop.setAttribute('x', '35')\n  goalTop.setAttribute('y', '4')\n  goalTop.setAttribute('width', '30')\n  goalTop.setAttribute('height', '8')\n  goalTop.setAttribute('fill', 'none')\n  goalTop.setAttribute('stroke', 'currentColor')\n  goalTop.setAttribute('stroke-width', '1')\n  g.appendChild(goalTop)\n\n  // ゴールエリア（下）\n  const goalBottom = document.createElementNS(\n    'http://www.w3.org/2000/svg',\n    'rect'\n  )\n  goalBottom.setAttribute('x', '35')\n  goalBottom.setAttribute('y', '128')\n  goalBottom.setAttribute('width', '30')\n  goalBottom.setAttribute('height', '8')\n  goalBottom.setAttribute('fill', 'none')\n  goalBottom.setAttribute('stroke', 'currentColor')\n  goalBottom.setAttribute('stroke-width', '1')\n  g.appendChild(goalBottom)\n\n  svg.appendChild(g)\n  return svg\n}\n\n/**\n * 選手ノード配置\n */\nfunction createPlayerNodes(\n  formationData: FormationData,\n  teamId: string\n): HTMLElement[] {\n  const nodes: HTMLElement[] = []\n  const teamColors = getTeamColors(teamId)\n\n  // フラット化された選手リストを作成\n  const flatPlayers: Player[] = []\n  formationData.lines.forEach(line => {\n    flatPlayers.push(...line)\n  })\n\n  flatPlayers.forEach((player, index) => {\n    const position = formationData.positions[index]\n    if (!position) {\n      return\n    }\n\n    const node = createPlayerNode(player, position, teamColors.cssClass)\n    nodes.push(node)\n  })\n\n  return nodes\n}\n\n/**\n * 個別選手ノード作成\n */\nfunction createPlayerNode(\n  player: Player,\n  position: Position,\n  teamClass: string\n): HTMLElement {\n  const node = document.createElement('div')\n  node.className = `pnode ${teamClass}`\n\n  // 絶対座標で配置\n  node.style.left = `${position.x}%`\n  node.style.top = `${position.y}%`\n  node.style.transform = 'translate(-50%, -50%)'\n\n  // ドット（選手マーカー）\n  const dot = document.createElement('div')\n  dot.className = 'dot'\n  node.appendChild(dot)\n\n  // 名前ボックス\n  const nameBox = document.createElement('div')\n  nameBox.className = 'namebox'\n  nameBox.textContent = getDisplayName(player)\n  node.appendChild(nameBox)\n\n  // ポジション表示（オプション）\n  if (player.pos) {\n    const posBox = document.createElement('div')\n    posBox.className = 'pos'\n    posBox.textContent = player.pos\n    node.appendChild(posBox)\n  }\n\n  // モーダルトリガー追加\n  addPlayerModalTrigger(node, player)\n\n  return node\n}\n\n/**\n * フォールバック配置（エラー時）\n */\nfunction createFallbackFormation(players: Player[]): FormationData {\n  // 簡単な4-4-2配置にフォールバック\n  const gk = players.find(p => p.pos === 'GK') || players[0]\n  const fieldPlayers = players.filter(p => p !== gk).slice(0, 10)\n\n  const lines: Player[][] = [\n    fieldPlayers.slice(0, 4), // DF\n    fieldPlayers.slice(4, 8), // MF\n    fieldPlayers.slice(8, 10), // FW\n    [gk], // GK\n  ]\n\n  const positions: Position[] = []\n\n  // DF ライン\n  lines[0].forEach((_, i) => {\n    positions.push({\n      x: 15 + (i * 70) / 3,\n      y: 25,\n    })\n  })\n\n  // MF ライン\n  lines[1].forEach((_, i) => {\n    positions.push({\n      x: 15 + (i * 70) / 3,\n      y: 50,\n    })\n  })\n\n  // FW ライン\n  lines[2].forEach((_, i) => {\n    positions.push({\n      x: 30 + i * 40,\n      y: 75,\n    })\n  })\n\n  // GK\n  positions.push({\n    x: 50,\n    y: 10,\n  })\n\n  return {\n    formation: 'フォールバック',\n    lines,\n    positions,\n  }\n}\n\n/**\n * ピッチサイズに応じた選手ノードサイズ調整\n */\nexport function adjustPlayerNodeSize(container: HTMLElement): void {\n  const containerWidth = container.offsetWidth\n  const baseSize = Math.max(12, Math.min(20, containerWidth / 20))\n\n  const dots = container.querySelectorAll('.dot') as NodeListOf<HTMLElement>\n  const nameboxes = container.querySelectorAll(\n    '.namebox'\n  ) as NodeListOf<HTMLElement>\n\n  dots.forEach(dot => {\n    dot.style.width = `${baseSize}px`\n    dot.style.height = `${baseSize}px`\n  })\n\n  nameboxes.forEach(namebox => {\n    const fontSize = Math.max(10, baseSize * 0.7)\n    namebox.style.fontSize = `${fontSize}px`\n  })\n}\n\n/**\n * ピッチの向きを変更（ホーム/アウェイ対応）\n */\nexport function flipPitch(container: HTMLElement, flip: boolean = false): void {\n  if (flip) {\n    container.style.transform = 'rotateX(180deg)'\n  } else {\n    container.style.transform = ''\n  }\n}\n\n/**\n * アニメーション付きで選手を再配置\n */\nexport function animatePlayerPositions(\n  container: HTMLElement,\n  newFormationData: FormationData,\n  duration: number = 300\n): void {\n  const nodes = container.querySelectorAll('.pnode') as NodeListOf<HTMLElement>\n\n  // フラット化された選手リスト\n  const flatPlayers: Player[] = []\n  newFormationData.lines.forEach(line => {\n    flatPlayers.push(...line)\n  })\n\n  nodes.forEach((node, index) => {\n    const newPosition = newFormationData.positions[index]\n    if (!newPosition) {\n      return\n    }\n\n    // CSS トランジション追加\n    node.style.transition = `left ${duration}ms ease, top ${duration}ms ease`\n\n    // 新しい位置に移動\n    node.style.left = `${newPosition.x}%`\n    node.style.top = `${newPosition.y}%`\n\n    // トランジション終了後にリセット\n    setTimeout(() => {\n      node.style.transition = ''\n    }, duration)\n  })\n}\n","// ベンチの正規化 - 文字→オブジェクト、JP表記/仮ポジ/アバター付与\n\nimport type { Player, NameOverrides, AvatarGuess } from '@/types'\nimport { generateDeterministicAvatar } from '@/ui/avatar'\n\n/**\n * ベンチの文字列選手を正規化してPlayerオブジェクトに変換\n */\nexport function normalizeBenchPlayers(\n  bench: (string | Player)[],\n  nameOverrides?: NameOverrides,\n  avatarGuess?: AvatarGuess\n): Player[] {\n  return bench.map(item => {\n    if (typeof item === 'string') {\n      return normalizeStringPlayer(item, nameOverrides, avatarGuess)\n    }\n    return item // すでにPlayerオブジェクト\n  })\n}\n\n/**\n * 文字列選手名をPlayerオブジェクトに変換\n */\nfunction normalizeStringPlayer(\n  playerName: string,\n  nameOverrides?: NameOverrides,\n  avatarGuess?: AvatarGuess\n): Player {\n  const trimmedName = playerName.trim()\n\n  // 日本語名を取得（オーバーライドから）\n  const japanseName = nameOverrides?.[trimmedName] || trimmedName\n\n  // ポジションを推測\n  const guessedPosition = guessPosition(trimmedName)\n\n  // アバターを推測\n  const guessedAvatar =\n    avatarGuess?.[trimmedName] || generateDeterministicAvatar(trimmedName)\n\n  return {\n    jp: japanseName,\n    intl: trimmedName,\n    pos: guessedPosition,\n    avatar: guessedAvatar,\n    stats: {\n      apps: 0,\n      goals: 0,\n      assists: 0,\n    },\n  }\n}\n\n/**\n * 選手名からポジションを推測\n * 簡単なヒューリスティック（完璧ではない）\n */\nfunction guessPosition(playerName: string): string {\n  const name = playerName.toLowerCase()\n\n  // GK の判定\n  if (\n    name.includes('keeper') ||\n    name.includes('ramsdale') ||\n    name.includes('meslier') ||\n    name.includes('leno') ||\n    name.includes('turner')\n  ) {\n    return 'GK'\n  }\n\n  // 既知の選手名からの推測\n  const positionMap: { [key: string]: string } = {\n    // Arsenal\n    'aaron ramsdale': 'GK',\n    'takehiro tomiyasu': 'RB',\n    'jakub kiwior': 'CB',\n    'kieran tierney': 'LB',\n    jorginho: 'CM',\n    'fabio vieira': 'AM',\n    'leandro trossard': 'LW',\n    'gabriel jesus': 'ST',\n    'eddie nketiah': 'ST',\n    'emile smith rowe': 'AM',\n    'mohamed elneny': 'CM',\n\n    // Leeds\n    'sam byram': 'RB',\n    'archie gray': 'CM',\n    'charlie cresswell': 'CB',\n    'wilfried gnonto': 'LW',\n    'joel piroe': 'ST',\n    'georginio rutter': 'AM',\n    'mateo joseph': 'ST',\n    'max wober': 'CB',\n    'tyler adams': 'DM',\n  }\n\n  const knownPosition = positionMap[name]\n  if (knownPosition) {\n    return knownPosition\n  }\n\n  // デフォルト推測（名前の特徴から）\n  if (name.includes('son') || name.includes('joseph')) {\n    return 'ST' // よくある名前のパターン\n  }\n\n  if (name.includes('gray') || name.includes('smith')) {\n    return 'CM' // 中盤っぽい名前\n  }\n\n  // フォールバック\n  return 'SUB' // 控え選手の汎用ポジション\n}\n\n/**\n * ベンチの表示順序を調整（ポジション別）\n */\nexport function sortBenchByPosition(players: Player[]): Player[] {\n  const positionOrder: { [key: string]: number } = {\n    GK: 1,\n    CB: 2,\n    LB: 3,\n    RB: 4,\n    DM: 5,\n    CM: 6,\n    AM: 7,\n    LW: 8,\n    RW: 9,\n    ST: 10,\n    SUB: 11,\n  }\n\n  return [...players].sort((a, b) => {\n    const orderA = positionOrder[a.pos || 'SUB'] || 999\n    const orderB = positionOrder[b.pos || 'SUB'] || 999\n\n    if (orderA === orderB) {\n      // 同じポジションなら名前順\n      return (a.jp || a.intl).localeCompare(b.jp || b.intl)\n    }\n\n    return orderA - orderB\n  })\n}\n\n/**\n * ベンチ選手のスタッツを推測（簡易版）\n */\nexport function guessPlayerStats(player: Player): Player {\n  if (player.stats && Object.keys(player.stats).length > 0) {\n    return player // すでにスタッツがある\n  }\n\n  // ポジションベースの基本スタッツ\n  let baseStats = { apps: 0, goals: 0, assists: 0 }\n\n  switch (player.pos) {\n    case 'GK':\n      baseStats = { apps: 10, goals: 0, assists: 0 }\n      break\n    case 'CB':\n    case 'LB':\n    case 'RB':\n      baseStats = { apps: 15, goals: 1, assists: 2 }\n      break\n    case 'DM':\n    case 'CM':\n      baseStats = { apps: 20, goals: 2, assists: 3 }\n      break\n    case 'AM':\n    case 'LW':\n    case 'RW':\n      baseStats = { apps: 18, goals: 4, assists: 6 }\n      break\n    case 'ST':\n      baseStats = { apps: 16, goals: 6, assists: 2 }\n      break\n    default:\n      baseStats = { apps: 8, goals: 1, assists: 1 }\n  }\n\n  return {\n    ...player,\n    stats: baseStats,\n  }\n}\n\n/**\n * オーバーライドデータを読み込み\n */\nexport async function loadOverrides(): Promise<{\n  nameOverrides: NameOverrides\n  avatarGuess: AvatarGuess\n}> {\n  try {\n    const [nameResponse, avatarResponse] = await Promise.all([\n      fetch('/src/data/overrides/jp-name-overrides.json'),\n      fetch('/src/data/overrides/avatar-guess.json'),\n    ])\n\n    const nameOverrides = await nameResponse.json()\n    const avatarGuess = await avatarResponse.json()\n\n    return { nameOverrides, avatarGuess }\n  } catch (error) {\n    console.warn('Failed to load overrides:', error)\n    return { nameOverrides: {}, avatarGuess: {} }\n  }\n}\n\n/**\n * チーム全体のベンチを正規化（外部APIとして使用）\n */\nexport async function normalizeBench(\n  bench: (string | Player)[]\n): Promise<Player[]> {\n  const { nameOverrides, avatarGuess } = await loadOverrides()\n\n  const normalizedPlayers = normalizeBenchPlayers(\n    bench,\n    nameOverrides,\n    avatarGuess\n  )\n\n  // スタッツ推測を適用\n  const playersWithStats = normalizedPlayers.map(player =>\n    guessPlayerStats(player)\n  )\n\n  // ポジション順でソート\n  return sortBenchByPosition(playersWithStats)\n}\n\n/**\n * ベンチ選手の検索・フィルタリング\n */\nexport function filterBenchPlayers(players: Player[], query: string): Player[] {\n  if (!query.trim()) {\n    return players\n  }\n\n  const searchQuery = query.toLowerCase().trim()\n\n  return players.filter(player => {\n    const searchableText = [player.jp, player.intl, player.pos]\n      .filter(Boolean)\n      .join(' ')\n      .toLowerCase()\n\n    return searchableText.includes(searchQuery)\n  })\n}\n\n/**\n * ベンチ選手の統計情報を取得\n */\nexport function getBenchStats(players: Player[]): {\n  totalPlayers: number\n  byPosition: { [position: string]: number }\n  averageApps: number\n  totalGoals: number\n} {\n  const byPosition: { [position: string]: number } = {}\n  let totalApps = 0\n  let totalGoals = 0\n\n  players.forEach(player => {\n    const pos = player.pos || 'Unknown'\n    byPosition[pos] = (byPosition[pos] || 0) + 1\n\n    totalApps += player.stats?.apps || 0\n    totalGoals += player.stats?.goals || 0\n  })\n\n  return {\n    totalPlayers: players.length,\n    byPosition,\n    averageApps:\n      players.length > 0 ? Math.round(totalApps / players.length) : 0,\n    totalGoals,\n  }\n}\n","// 布陣タブ - ピッチ表示とベンチメンバー\n\nimport type { Fixture } from '@/types'\nimport { renderPitch } from '@/features/pitch/renderPitch'\nimport { normalizeBench } from '@/features/players/bench'\nimport { getDisplayName } from '@/features/players/displayName'\nimport { addPlayerModalTrigger } from '@/features/players/modal'\nimport { getTeamColors, getTeamEmblem } from '@/ui/emblems'\n\n/**\n * 布陣セクション描画\n */\nexport async function renderLineup(\n  fixture: Fixture,\n  selectedTeam: 'home' | 'away'\n): Promise<HTMLElement> {\n  const container = document.createElement('div')\n  container.className = 'lineup-section'\n\n  // チーム切り替えピル\n  const teamSwitcher = createTeamSwitcher(fixture, selectedTeam)\n  container.appendChild(teamSwitcher)\n\n  // 現在選択中のチーム\n  const currentTeam = selectedTeam === 'home' ? fixture.home : fixture.away\n\n  // チーム情報ヘッダー\n  const teamHeader = createTeamHeader(currentTeam)\n  container.appendChild(teamHeader)\n\n  // ピッチ表示\n  const pitchContainer = renderPitch(\n    currentTeam.formation,\n    currentTeam.lineup,\n    currentTeam.teamId\n  )\n  container.appendChild(pitchContainer)\n\n  // ベンチメンバー\n  const benchSection = await createBenchSection(currentTeam)\n  container.appendChild(benchSection)\n\n  return container\n}\n\n/**\n * チーム切り替えピル\n */\nfunction createTeamSwitcher(\n  fixture: Fixture,\n  selectedTeam: 'home' | 'away'\n): HTMLElement {\n  const container = document.createElement('div')\n  container.className = 'mb-6'\n\n  const header = document.createElement('div')\n  header.className = 'flex items-center justify-between mb-4'\n\n  const title = document.createElement('h2')\n  title.className = 'text-lg font-semibold'\n  title.textContent = '予想スタメン'\n\n  const pills = document.createElement('div')\n  pills.className = 'team-pills'\n\n  // ホームチームピル\n  const homePill = createTeamPill(fixture.home, 'home', selectedTeam === 'home')\n  pills.appendChild(homePill)\n\n  // アウェイチームピル\n  const awayPill = createTeamPill(fixture.away, 'away', selectedTeam === 'away')\n  pills.appendChild(awayPill)\n\n  header.appendChild(title)\n  header.appendChild(pills)\n  container.appendChild(header)\n\n  return container\n}\n\n/**\n * 個別チームピル\n */\nfunction createTeamPill(\n  team: any,\n  teamType: 'home' | 'away',\n  isActive: boolean\n): HTMLElement {\n  const pill = document.createElement('button')\n  pill.className = `team-pill ${team.teamId} ${isActive ? 'active' : ''}`\n  pill.setAttribute('data-team', teamType)\n\n  // チームアイコンとテキストを含む\n  pill.innerHTML = `\n    ${getTeamEmblem(team.teamId, 20)}\n    <span class=\"ml-2\">${team.name}</span>\n  `\n\n  // クリックイベント\n  pill.addEventListener('click', () => {\n    // 状態を更新（実際の実装では状態管理を通して行う）\n    import('@/app/state').then(({ setActiveTeam }) => {\n      setActiveTeam(teamType)\n    })\n  })\n\n  return pill\n}\n\n/**\n * チーム情報ヘッダー\n */\nfunction createTeamHeader(team: any): HTMLElement {\n  const header = document.createElement('div')\n  header.className = 'text-center mb-6'\n\n  const colors = getTeamColors(team.teamId)\n\n  header.innerHTML = `\n    <div class=\"flex items-center justify-center gap-4 mb-2\">\n      ${getTeamEmblem(team.teamId, 40)}\n      <div>\n        <h3 class=\"text-xl font-bold\" style=\"color: ${colors.primary}\">${team.name}</h3>\n        <div class=\"text-sm text-muted\">フォーメーション: ${team.formation}</div>\n      </div>\n    </div>\n  `\n\n  return header\n}\n\n/**\n * ベンチセクション\n */\nasync function createBenchSection(team: any): Promise<HTMLElement> {\n  const section = document.createElement('div')\n  section.className = 'bench-area'\n\n  const title = document.createElement('h3')\n  title.className = 'bench-title'\n  title.textContent = 'ベンチメンバー'\n  section.appendChild(title)\n\n  try {\n    // ベンチメンバーを正規化\n    const normalizedBench = await normalizeBench(team.bench)\n\n    if (normalizedBench.length === 0) {\n      const emptyMessage = document.createElement('div')\n      emptyMessage.className = 'text-center py-8 text-muted'\n      emptyMessage.textContent = 'ベンチメンバーの情報がありません'\n      section.appendChild(emptyMessage)\n      return section\n    }\n\n    // ベンチグリッド\n    const grid = document.createElement('div')\n    grid.className = 'bench-grid'\n\n    normalizedBench.forEach(player => {\n      const playerCard = createBenchPlayerCard(player, team.teamId)\n      grid.appendChild(playerCard)\n    })\n\n    section.appendChild(grid)\n  } catch (error) {\n    console.error('Failed to create bench section:', error)\n    const errorMessage = document.createElement('div')\n    errorMessage.className = 'text-center py-8 text-error'\n    errorMessage.textContent = 'ベンチメンバーの読み込みに失敗しました'\n    section.appendChild(errorMessage)\n  }\n\n  return section\n}\n\n/**\n * ベンチ選手カード\n */\nfunction createBenchPlayerCard(player: any, teamId: string): HTMLElement {\n  const card = document.createElement('div')\n  card.className = 'bench-player cursor-pointer'\n\n  const colors = getTeamColors(teamId)\n\n  // ドット（チーム色）\n  const dot = document.createElement('div')\n  dot.className = 'dot'\n  dot.style.backgroundColor = colors.primary\n  dot.style.borderColor = colors.secondary\n\n  // 名前ボックス\n  const nameBox = document.createElement('div')\n  nameBox.className = 'namebox'\n  nameBox.textContent = getDisplayName(player)\n\n  // ポジション表示\n  const posBox = document.createElement('div')\n  posBox.className = 'text-xs text-muted mt-1'\n  posBox.textContent = player.pos || 'SUB'\n\n  // 背番号表示（ある場合）\n  if (player.num) {\n    const numBox = document.createElement('div')\n    numBox.className = 'text-xs font-mono text-muted'\n    numBox.textContent = `#${player.num}`\n    card.appendChild(numBox)\n  }\n\n  card.appendChild(dot)\n  card.appendChild(nameBox)\n  card.appendChild(posBox)\n\n  // モーダルトリガーを追加\n  addPlayerModalTrigger(card, player)\n\n  return card\n}\n\n/**\n * フォーメーション詳細情報\n */\nexport function createFormationDetails(team: any): HTMLElement {\n  const section = document.createElement('div')\n  section.className = 'card mt-6'\n\n  section.innerHTML = `\n    <div class=\"card-header\">\n      <h3 class=\"card-title\">フォーメーション詳細</h3>\n      <div class=\"card-subtitle\">${team.formation} システム</div>\n    </div>\n    \n    <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n      <!-- 戦術的特徴 -->\n      <div>\n        <h4 class=\"text-sm font-semibold text-secondary mb-3\">戦術的特徴</h4>\n        <div class=\"space-y-2 text-sm\">\n          ${getTacticalFeatures(team.formation)\n            .map(\n              feature => `\n            <div class=\"flex items-start gap-2\">\n              <span class=\"flex-shrink-0 mt-1.5 w-1.5 h-1.5 rounded-full bg-primary\"></span>\n              <span>${feature}</span>\n            </div>\n          `\n            )\n            .join('')}\n        </div>\n      </div>\n      \n      <!-- キープレイヤー -->\n      <div>\n        <h4 class=\"text-sm font-semibold text-secondary mb-3\">キープレイヤー</h4>\n        <div class=\"space-y-2\">\n          ${getKeyPlayers(team.lineup)\n            .slice(0, 3)\n            .map(\n              player => `\n            <div class=\"flex items-center gap-3 text-sm\">\n              <div class=\"w-6 h-6 rounded-full bg-primary text-white text-xs flex items-center justify-center font-mono\">\n                ${player.num || '?'}\n              </div>\n              <div>\n                <div class=\"font-medium\">${getDisplayName(player)}</div>\n                <div class=\"text-xs text-muted\">${player.pos}</div>\n              </div>\n            </div>\n          `\n            )\n            .join('')}\n        </div>\n      </div>\n    </div>\n  `\n\n  return section\n}\n\n/**\n * フォーメーション別の戦術的特徴を取得\n */\nfunction getTacticalFeatures(formation: string): string[] {\n  const features: { [key: string]: string[] } = {\n    '4-3-3': [\n      '攻撃的なウィングプレー',\n      '高い位置でのプレス',\n      '中盤でのポゼッション',\n      'サイドバックの積極的な上がり',\n    ],\n    '4-2-3-1': [\n      '中盤の数的優位',\n      'トップ下の創造性',\n      '守備的な安定性',\n      'ボールホルダーへのサポート',\n    ],\n    '3-5-2': [\n      'ウィングバックの重要性',\n      '中盤でのマンパワー',\n      '3センターバックの安定性',\n      'コンパクトな守備ブロック',\n    ],\n    '4-4-2': [\n      'バランスの取れた配置',\n      'サイドからの攻撃',\n      '2トップの連携',\n      '守備時の4-4-2ブロック',\n    ],\n  }\n\n  return (\n    features[formation] || [\n      'カスタムフォーメーションの特徴',\n      'チーム独自の戦術',\n    ]\n  )\n}\n\n/**\n * キープレイヤーを特定\n */\nfunction getKeyPlayers(lineup: any[]): any[] {\n  // キャプテンやスター選手を特定するロジック\n  // ここでは簡易的に背番号や統計から判定\n  return [...lineup].sort((a, b) => {\n    const scoreA = (a.stats?.goals || 0) + (a.stats?.assists || 0) * 0.5\n    const scoreB = (b.stats?.goals || 0) + (b.stats?.assists || 0) * 0.5\n    return scoreB - scoreA\n  })\n}\n\n/**\n * ピッチビューの切り替え機能\n */\nexport function addPitchViewToggle(container: HTMLElement): void {\n  const toggleButton = document.createElement('button')\n  toggleButton.className = 'btn btn-secondary mb-4'\n  toggleButton.textContent = 'ピッチ向きを反転'\n\n  let isFlipped = false\n\n  toggleButton.addEventListener('click', () => {\n    const pitchContainer = container.querySelector(\n      '.pitch-container'\n    ) as HTMLElement\n    if (pitchContainer) {\n      isFlipped = !isFlipped\n      if (isFlipped) {\n        pitchContainer.style.transform = 'rotateX(180deg)'\n        toggleButton.textContent = '元の向きに戻す'\n      } else {\n        pitchContainer.style.transform = ''\n        toggleButton.textContent = 'ピッチ向きを反転'\n      }\n    }\n  })\n\n  // ピッチの前に挿入\n  const pitchContainer = container.querySelector('.pitch-container')\n  if (pitchContainer) {\n    pitchContainer.parentElement?.insertBefore(toggleButton, pitchContainer)\n  }\n}\n","// タイムライン タブ - 試合の流れとキーポイント\n\nimport type { Fixture, TimelineEvent } from '@/types'\nimport { getTeamColors } from '@/ui/emblems'\n\n/**\n * タイムライン セクション描画\n */\nexport async function renderTimeline(fixture: Fixture): Promise<HTMLElement> {\n  const container = document.createElement('div')\n  container.className = 'timeline-section'\n\n  // セクションヘッダー\n  const header = createSectionHeader()\n  container.appendChild(header)\n\n  // キーポイント サマリー\n  const keyPoints = createKeyPointsSummary(fixture)\n  container.appendChild(keyPoints)\n\n  // 試合タイムライン\n  const timeline = createMatchTimeline(fixture)\n  container.appendChild(timeline)\n\n  // 統計情報\n  const stats = createTimelineStats(fixture)\n  container.appendChild(stats)\n\n  return container\n}\n\n/**\n * セクションヘッダー\n */\nfunction createSectionHeader(): HTMLElement {\n  const header = document.createElement('div')\n  header.className = 'text-center mb-8'\n\n  header.innerHTML = `\n    <h2 class=\"text-2xl font-bold mb-2\">試合の流れ</h2>\n    <p class=\"text-muted\">タイムラインとキーポイントで振り返る</p>\n  `\n\n  return header\n}\n\n/**\n * キーポイント サマリー\n */\nfunction createKeyPointsSummary(fixture: Fixture): HTMLElement {\n  const section = document.createElement('div')\n  section.className = 'card mb-8'\n\n  section.innerHTML = `\n    <div class=\"card-header\">\n      <h3 class=\"card-title\">試合のキーポイント</h3>\n      <div class=\"card-subtitle\">注目すべき要素と展開</div>\n    </div>\n  `\n\n  if (fixture.keyPoints && fixture.keyPoints.length > 0) {\n    const pointsList = document.createElement('div')\n    pointsList.className = 'grid grid-cols-1 md:grid-cols-2 gap-4'\n\n    fixture.keyPoints.forEach((point, index) => {\n      const pointCard = document.createElement('div')\n      pointCard.className = 'flex items-start gap-3 p-4 bg-tertiary rounded-lg'\n\n      pointCard.innerHTML = `\n        <div class=\"flex-shrink-0 w-8 h-8 rounded-full bg-primary text-white text-sm font-bold flex items-center justify-center\">\n          ${index + 1}\n        </div>\n        <div class=\"text-sm\">\n          ${point}\n        </div>\n      `\n\n      pointsList.appendChild(pointCard)\n    })\n\n    section.appendChild(pointsList)\n  } else {\n    const emptyMessage = document.createElement('div')\n    emptyMessage.className = 'text-center py-8 text-muted'\n    emptyMessage.textContent = 'キーポイント情報はありません'\n    section.appendChild(emptyMessage)\n  }\n\n  return section\n}\n\n/**\n * 試合タイムライン\n */\nfunction createMatchTimeline(fixture: Fixture): HTMLElement {\n  const section = document.createElement('div')\n  section.className = 'card mb-8'\n\n  section.innerHTML = `\n    <div class=\"card-header\">\n      <h3 class=\"card-title\">試合タイムライン</h3>\n      <div class=\"card-subtitle\">時系列で見る試合展開</div>\n    </div>\n  `\n\n  if (fixture.timeline && fixture.timeline.length > 0) {\n    const timeline = createTimelineComponent(fixture.timeline, fixture)\n    section.appendChild(timeline)\n  } else {\n    const emptyMessage = document.createElement('div')\n    emptyMessage.className = 'text-center py-8 text-muted'\n    emptyMessage.textContent = 'タイムライン情報はありません'\n    section.appendChild(emptyMessage)\n  }\n\n  return section\n}\n\n/**\n * タイムラインコンポーネント\n */\nfunction createTimelineComponent(\n  events: TimelineEvent[],\n  fixture: Fixture\n): HTMLElement {\n  const timeline = document.createElement('div')\n  timeline.className = 'relative'\n\n  // タイムライン軸\n  const axis = document.createElement('div')\n  axis.className = 'absolute left-8 top-0 bottom-0 w-0.5 bg-border'\n  timeline.appendChild(axis)\n\n  // イベントリスト\n  const eventsList = document.createElement('div')\n  eventsList.className = 'space-y-6'\n\n  events.forEach(event => {\n    const eventItem = createTimelineEvent(event, fixture)\n    eventsList.appendChild(eventItem)\n  })\n\n  timeline.appendChild(eventsList)\n\n  return timeline\n}\n\n/**\n * 個別タイムラインイベント\n */\nfunction createTimelineEvent(\n  event: TimelineEvent,\n  fixture: Fixture\n): HTMLElement {\n  const item = document.createElement('div')\n  item.className = 'relative flex items-start gap-4'\n\n  // イベントアイコン\n  const icon = createEventIcon(event)\n\n  // イベント詳細\n  const details = document.createElement('div')\n  details.className = 'flex-1 min-w-0'\n\n  // チーム色を取得\n  let teamColor = 'var(--color-primary)'\n  if (event.team === 'home') {\n    teamColor = getTeamColors(fixture.home.teamId).primary\n  } else if (event.team === 'away') {\n    teamColor = getTeamColors(fixture.away.teamId).primary\n  }\n\n  details.innerHTML = `\n    <div class=\"flex items-center gap-3 mb-2\">\n      <div class=\"text-sm font-mono font-bold text-secondary\">${event.time}</div>\n      <div class=\"px-2 py-1 text-xs rounded-full bg-tertiary text-secondary\">\n        ${getPhaseText(event.phase)}\n      </div>\n      ${\n        event.type\n          ? `\n        <div class=\"px-2 py-1 text-xs rounded-full text-white\" style=\"background-color: ${getEventTypeColor(event.type)}\">\n          ${getEventTypeText(event.type)}\n        </div>\n      `\n          : ''\n      }\n    </div>\n    \n    <div class=\"text-sm mb-1\" ${event.team ? `style=\"color: ${teamColor}\"` : ''}>\n      ${event.desc}\n    </div>\n    \n    ${\n      event.player\n        ? `\n      <div class=\"text-xs text-muted\">\n        関連選手: <span class=\"font-medium\">${event.player}</span>\n      </div>\n    `\n        : ''\n    }\n  `\n\n  item.appendChild(icon)\n  item.appendChild(details)\n\n  return item\n}\n\n/**\n * イベントアイコン\n */\nfunction createEventIcon(event: TimelineEvent): HTMLElement {\n  const icon = document.createElement('div')\n  icon.className =\n    'flex-shrink-0 w-6 h-6 rounded-full flex items-center justify-center text-white text-xs font-bold z-10'\n\n  // イベントタイプに応じたアイコンと色\n  const { color, symbol } = getEventIconStyle(event)\n  icon.style.backgroundColor = color\n  icon.textContent = symbol\n\n  return icon\n}\n\n/**\n * イベントアイコンスタイル\n */\nfunction getEventIconStyle(event: TimelineEvent): {\n  color: string\n  symbol: string\n} {\n  if (event.type) {\n    const styles = {\n      goal: { color: '#10b981', symbol: '⚽' },\n      assist: { color: '#3b82f6', symbol: '🅰' },\n      card: { color: '#f59e0b', symbol: '📋' },\n      substitution: { color: '#8b5cf6', symbol: '🔄' },\n      other: { color: '#6b7280', symbol: 'ℹ' },\n    }\n    return styles[event.type] || styles.other\n  }\n\n  // フェーズに応じたスタイル\n  const phaseStyles = {\n    開始: { color: '#10b981', symbol: '▶' },\n    前半: { color: '#3b82f6', symbol: '1' },\n    後半: { color: '#f59e0b', symbol: '2' },\n    延長前半: { color: '#ef4444', symbol: 'E1' },\n    延長後半: { color: '#ef4444', symbol: 'E2' },\n    PK戦: { color: '#8b5cf6', symbol: 'PK' },\n    終了: { color: '#6b7280', symbol: '■' },\n  }\n\n  return phaseStyles[event.phase] || { color: '#6b7280', symbol: '●' }\n}\n\n/**\n * タイムライン統計\n */\nfunction createTimelineStats(fixture: Fixture): HTMLElement {\n  const section = document.createElement('div')\n  section.className = 'card'\n\n  section.innerHTML = `\n    <div class=\"card-header\">\n      <h3 class=\"card-title\">試合統計</h3>\n      <div class=\"card-subtitle\">タイムライン分析</div>\n    </div>\n  `\n\n  const stats = analyzeTimelineStats(fixture.timeline)\n  const statsGrid = createStatsGrid(stats)\n  section.appendChild(statsGrid)\n\n  return section\n}\n\n/**\n * 統計グリッド\n */\nfunction createStatsGrid(stats: any): HTMLElement {\n  const grid = document.createElement('div')\n  grid.className = 'grid grid-cols-2 md:grid-cols-4 gap-4'\n\n  const statItems = [\n    { label: '総イベント数', value: stats.totalEvents },\n    { label: 'ゴール', value: stats.goals },\n    { label: '交代', value: stats.substitutions },\n    { label: 'カード', value: stats.cards },\n  ]\n\n  statItems.forEach(item => {\n    const statCard = document.createElement('div')\n    statCard.className = 'text-center p-4 bg-secondary rounded-lg'\n\n    statCard.innerHTML = `\n      <div class=\"text-2xl font-bold mb-1\">${item.value}</div>\n      <div class=\"text-sm text-muted\">${item.label}</div>\n    `\n\n    grid.appendChild(statCard)\n  })\n\n  return grid\n}\n\n/**\n * タイムライン統計分析\n */\nfunction analyzeTimelineStats(timeline: TimelineEvent[]): {\n  totalEvents: number\n  goals: number\n  substitutions: number\n  cards: number\n  phases: { [key: string]: number }\n} {\n  const stats = {\n    totalEvents: timeline.length,\n    goals: 0,\n    substitutions: 0,\n    cards: 0,\n    phases: {} as { [key: string]: number },\n  }\n\n  timeline.forEach(event => {\n    // フェーズ別カウント\n    stats.phases[event.phase] = (stats.phases[event.phase] || 0) + 1\n\n    // イベントタイプ別カウント\n    if (event.type === 'goal') {\n      stats.goals++\n    }\n    if (event.type === 'substitution') {\n      stats.substitutions++\n    }\n    if (event.type === 'card') {\n      stats.cards++\n    }\n  })\n\n  return stats\n}\n\n// ヘルパー関数\n\nfunction getPhaseText(phase: string): string {\n  const phaseMap: { [key: string]: string } = {\n    開始: 'キックオフ',\n    前半: '前半',\n    後半: '後半',\n    延長前半: '延長前半',\n    延長後半: '延長後半',\n    PK戦: 'PK戦',\n    終了: '試合終了',\n  }\n\n  return phaseMap[phase] || phase\n}\n\nfunction getEventTypeText(type: string): string {\n  const typeMap: { [key: string]: string } = {\n    goal: 'ゴール',\n    assist: 'アシスト',\n    card: 'カード',\n    substitution: '交代',\n    other: 'その他',\n  }\n\n  return typeMap[type] || type\n}\n\nfunction getEventTypeColor(type: string): string {\n  const colorMap: { [key: string]: string } = {\n    goal: '#10b981',\n    assist: '#3b82f6',\n    card: '#f59e0b',\n    substitution: '#8b5cf6',\n    other: '#6b7280',\n  }\n\n  return colorMap[type] || '#6b7280'\n}\n\n/**\n * タイムライン フィルタリング機能\n */\nexport function addTimelineFilters(\n  container: HTMLElement,\n  fixture: Fixture\n): void {\n  const filterContainer = document.createElement('div')\n  filterContainer.className = 'flex flex-wrap gap-2 mb-6'\n\n  // フィルターボタンを作成\n  const filters = ['all', 'goal', 'substitution', 'card']\n\n  filters.forEach(filter => {\n    const button = document.createElement('button')\n    button.className = `btn btn-secondary btn-sm ${filter === 'all' ? 'active' : ''}`\n    button.textContent = getFilterLabel(filter)\n\n    button.addEventListener('click', () => {\n      // アクティブフィルターを更新\n      filterContainer\n        .querySelectorAll('.btn')\n        .forEach(btn => btn.classList.remove('active'))\n      button.classList.add('active')\n\n      // タイムラインを再描画\n      const timelineContainer = container.querySelector('.card:last-child')\n      if (timelineContainer) {\n        const filteredEvents = filterEvents(fixture.timeline, filter)\n        const newTimeline = createTimelineComponent(filteredEvents, fixture)\n\n        const oldTimeline = timelineContainer.querySelector('.relative')\n        if (oldTimeline) {\n          oldTimeline.replaceWith(newTimeline)\n        }\n      }\n    })\n\n    filterContainer.appendChild(button)\n  })\n\n  // タイムラインカードの前に挿入\n  const timelineCard = container.querySelector('.card:last-child')\n  if (timelineCard) {\n    timelineCard.parentElement?.insertBefore(filterContainer, timelineCard)\n  }\n}\n\nfunction getFilterLabel(filter: string): string {\n  const labels: { [key: string]: string } = {\n    all: '全て',\n    goal: 'ゴール',\n    substitution: '交代',\n    card: 'カード',\n  }\n\n  return labels[filter] || filter\n}\n\nfunction filterEvents(\n  events: TimelineEvent[],\n  filter: string\n): TimelineEvent[] {\n  if (filter === 'all') {\n    return events\n  }\n\n  return events.filter(event => event.type === filter)\n}\n","// アプリケーションエントリポイント\n\nimport type { Fixture } from '@/types'\nimport {\n  stateManager,\n  subscribeToState,\n  setFixture,\n  setLoading,\n  setError,\n  applyInitialTheme,\n} from './state'\nimport { initRouter, onRouteChange, getAllRoutes } from './router'\n\n// UI Imports\nimport '@/ui/tokens.css'\nimport '@/ui/base.css'\nimport '@/ui/components.css'\n\n// Feature Imports\nimport { renderOverview } from '@/features/tabs/overview'\nimport { renderTactics } from '@/features/tabs/tactics'\nimport { renderLineup } from '@/features/tabs/lineup'\nimport { renderTimeline } from '@/features/tabs/timeline'\n\n/**\n * アプリケーション初期化\n */\nexport async function initApp(): Promise<void> {\n  try {\n    // 初期テーマを適用\n    applyInitialTheme()\n\n    // ローディング状態を設定\n    setLoading(true)\n\n    // ルーター初期化\n    initRouter()\n\n    // ヘッダーとナビゲーションを描画\n    await renderHeader()\n    await renderTabNavigation()\n\n    // フィクスチャデータを読み込み\n    const fixture = await loadFixtureData()\n    setFixture(fixture)\n\n    // 初期コンテンツを描画\n    await renderCurrentRoute()\n\n    // 状態変更とルート変更を監視\n    setupEventListeners()\n\n    // ローディング完了\n    setLoading(false)\n\n    // アプリケーション初期化完了\n  } catch (error) {\n    console.error('App initialization failed:', error)\n    setError(error instanceof Error ? error.message : '初期化に失敗しました')\n  }\n}\n\n/**\n * ヘッダー描画\n */\nasync function renderHeader(): Promise<void> {\n  const header = document.createElement('header')\n  header.className = 'header'\n\n  const container = document.createElement('div')\n  container.className = 'container header-content'\n\n  // ロゴ\n  const logo = document.createElement('a')\n  logo.className = 'logo'\n  logo.href = '#overview'\n  logo.textContent = '試合プレビュー'\n\n  // テーマ切り替えボタン\n  const themeToggle = createThemeToggle()\n\n  container.appendChild(logo)\n  container.appendChild(themeToggle)\n  header.appendChild(container)\n\n  // ヘッダーを挿入\n  const existingHeader = document.querySelector('header')\n  if (existingHeader) {\n    existingHeader.replaceWith(header)\n  } else {\n    document.body.insertBefore(header, document.body.firstChild)\n  }\n}\n\n/**\n * タブナビゲーション描画\n */\nasync function renderTabNavigation(): Promise<void> {\n  const nav = document.createElement('nav')\n  nav.className = 'container'\n\n  const tabNav = document.createElement('div')\n  tabNav.className = 'tab-nav'\n\n  const routes = getAllRoutes()\n\n  routes.forEach(({ route, title, hash }) => {\n    const button = document.createElement('button')\n    button.className = 'tab-button'\n    button.textContent = title\n    button.setAttribute('data-route', route)\n    button.addEventListener('click', () => {\n      window.location.hash = hash\n    })\n\n    tabNav.appendChild(button)\n  })\n\n  nav.appendChild(tabNav)\n\n  // ナビゲーションを挿入\n  const header = document.querySelector('header')\n  if (header) {\n    header.insertAdjacentElement('afterend', nav)\n  } else {\n    document.body.appendChild(nav)\n  }\n\n  // アクティブタブを更新\n  updateActiveTab()\n}\n\n/**\n * テーマ切り替えボタン作成\n */\nfunction createThemeToggle(): HTMLElement {\n  const button = document.createElement('button')\n  button.className = 'btn btn-secondary'\n  button.setAttribute('aria-label', 'テーマ切り替え')\n\n  const icon = document.createElement('span')\n  icon.textContent = '🌙'\n  button.appendChild(icon)\n\n  button.addEventListener('click', () => {\n    const currentState = stateManager.getState()\n    const currentTheme = currentState.theme\n\n    let newTheme: 'light' | 'dark' | 'auto'\n    if (currentTheme === 'light') {\n      newTheme = 'dark'\n      icon.textContent = '☀️'\n    } else if (currentTheme === 'dark') {\n      newTheme = 'auto'\n      icon.textContent = '🌗'\n    } else {\n      newTheme = 'light'\n      icon.textContent = '🌙'\n    }\n\n    stateManager.setTheme(newTheme)\n  })\n\n  return button\n}\n\n/**\n * フィクスチャデータ読み込み\n */\nasync function loadFixtureData(): Promise<Fixture> {\n  try {\n    const response = await fetch('./data/fixtures/2025-08-24-ars-lee.json')\n    if (!response.ok) {\n      throw new Error(`Failed to load fixture data: ${response.status}`)\n    }\n\n    const fixture = await response.json()\n    return fixture\n  } catch (error) {\n    console.error('Failed to load fixture data:', error)\n    throw new Error('試合データの読み込みに失敗しました')\n  }\n}\n\n/**\n * 現在のルートに応じてコンテンツを描画\n */\nasync function renderCurrentRoute(): Promise<void> {\n  const state = stateManager.getState()\n  const currentRoute = state.selectedTab\n\n  // メインコンテンツエリアを取得または作成\n  let main = document.querySelector('main')\n  if (!main) {\n    main = document.createElement('main')\n    main.className = 'container'\n    document.body.appendChild(main)\n  }\n\n  // ローディング表示\n  if (state.loading) {\n    main.innerHTML = `\n      <div class=\"flex items-center justify-center py-16\">\n        <div class=\"text-lg text-muted\">読み込み中...</div>\n      </div>\n    `\n    return\n  }\n\n  // エラー表示\n  if (state.error) {\n    main.innerHTML = `\n      <div class=\"card\">\n        <div class=\"text-center py-8\">\n          <h2 class=\"text-xl font-semibold mb-4 text-error\">エラーが発生しました</h2>\n          <p class=\"text-muted mb-6\">${state.error}</p>\n          <button class=\"btn btn-primary\" onclick=\"location.reload()\">\n            再読み込み\n          </button>\n        </div>\n      </div>\n    `\n    return\n  }\n\n  // フィクスチャデータなし\n  if (!state.currentFixture) {\n    main.innerHTML = `\n      <div class=\"card\">\n        <div class=\"text-center py-8\">\n          <h2 class=\"text-xl font-semibold mb-4\">試合データが見つかりません</h2>\n          <p class=\"text-muted\">試合情報を読み込めませんでした。</p>\n        </div>\n      </div>\n    `\n    return\n  }\n\n  // ルートに応じてコンテンツを描画\n  try {\n    let content: HTMLElement\n\n    switch (currentRoute) {\n      case 'overview':\n        content = await renderOverview(state.currentFixture)\n        break\n      case 'tactics':\n        content = await renderTactics(state.currentFixture)\n        break\n      case 'lineup':\n        content = await renderLineup(state.currentFixture, state.selectedTeam)\n        break\n      case 'timeline':\n        content = await renderTimeline(state.currentFixture)\n        break\n      default:\n        throw new Error(`Unknown route: ${currentRoute}`)\n    }\n\n    // コンテンツを更新\n    main.innerHTML = ''\n    main.appendChild(content)\n  } catch (error) {\n    console.error('Failed to render route:', error)\n    main.innerHTML = `\n      <div class=\"card\">\n        <div class=\"text-center py-8\">\n          <h2 class=\"text-xl font-semibold mb-4 text-error\">描画エラー</h2>\n          <p class=\"text-muted\">コンテンツの描画に失敗しました。</p>\n        </div>\n      </div>\n    `\n  }\n}\n\n/**\n * アクティブタブの表示を更新\n */\nfunction updateActiveTab(): void {\n  const state = stateManager.getState()\n  const buttons = document.querySelectorAll('.tab-button')\n\n  buttons.forEach(button => {\n    const route = button.getAttribute('data-route')\n    if (route === state.selectedTab) {\n      button.classList.add('active')\n    } else {\n      button.classList.remove('active')\n    }\n  })\n}\n\n/**\n * イベントリスナーセットアップ\n */\nfunction setupEventListeners(): void {\n  // 状態変更を監視\n  subscribeToState(() => {\n    updateActiveTab()\n    renderCurrentRoute()\n  })\n\n  // ルート変更を監視\n  onRouteChange(() => {\n    updateActiveTab()\n    renderCurrentRoute()\n  })\n\n  // ウィンドウリサイズを監視（レスポンシブ対応）\n  let resizeTimeout: number\n  window.addEventListener('resize', () => {\n    clearTimeout(resizeTimeout)\n    resizeTimeout = window.setTimeout(() => {\n      // ピッチサイズなどの調整が必要であれば実行\n      renderCurrentRoute()\n    }, 250)\n  })\n\n  // キーボードショートカット\n  document.addEventListener('keydown', event => {\n    // Ctrl/Cmd + R で再読み込み\n    if ((event.ctrlKey || event.metaKey) && event.key === 'r') {\n      event.preventDefault()\n      location.reload()\n    }\n  })\n}\n\n/**\n * アプリケーション開始\n */\nexport function startApp(): void {\n  // DOM読み込み完了後に初期化\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initApp)\n  } else {\n    initApp()\n  }\n}\n\n// 未処理のエラーをキャッチ\nwindow.addEventListener('error', event => {\n  console.error('Unhandled error:', event.error)\n  setError('予期しないエラーが発生しました')\n})\n\nwindow.addEventListener('unhandledrejection', event => {\n  console.error('Unhandled promise rejection:', event.reason)\n  setError('非同期処理でエラーが発生しました')\n})\n\n// アプリケーション開始\nstartApp()\n"],"file":"assets/index-Cnj_b5vU.js"}