name: Deploy

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run tests
        run: |
          npm run lint:check
          npm run typecheck
          npm run test:unit
          npm run test:e2e
          
      - name: Build application
        run: npm run build
        
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Create versioned deployment
        run: |
          VERSION=${{ steps.version.outputs.VERSION }}
          mkdir -p deploy/v$VERSION
          cp -r dist/* deploy/v$VERSION/
          
          # Create or update latest symlink
          cd deploy
          rm -f latest
          ln -sf v$VERSION latest
          
          # Create version index
          echo "# BSix.com Versions" > versions.md
          echo "" >> versions.md
          for dir in v*/; do
            if [ -d "$dir" ]; then
              version=${dir%/}
              echo "- [$version](./$version/)" >> versions.md
            fi
          done
          echo "- [latest (v$VERSION)](./latest/)" >> versions.md
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload to Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: deploy/
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## Changes in v${{ steps.version.outputs.VERSION }}
            
            ðŸš€ **Deployment URL**: ${{ steps.deployment.outputs.page_url }}latest/
            ðŸ“¦ **Versioned URL**: ${{ steps.deployment.outputs.page_url }}v${{ steps.version.outputs.VERSION }}/
            
            ### Rollback Instructions
            To rollback to a previous version, update the `latest` symlink:
            ```bash
            cd deploy
            rm latest
            ln -sf v<previous-version> latest
            git add latest
            git commit -m "Rollback to v<previous-version>"
            git push
            ```
          draft: false
          prerelease: false
